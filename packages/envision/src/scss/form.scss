.#{$prefix}-form {
   text-size-adjust: none;

   input,
   select,
   textarea,
   &-input {
      font-family: inherit;
   }

   input {
      margin: 0;
   }

   &-input {
      background-color: css-var('form-input-background-color');
      background-image: none;
      border: $border-width $border-style css-var('form-input-border-color');
      border-radius: css-var('form-input-border-radius');
      box-sizing: border-box;
      color: css-var('form-input-font-color');
      display: block;
      font-size: css-var('font-size-medium');
      line-height: $form-input-line-height;
      margin: 0;
      padding: css-var('spacing-x-small');
      transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      width: 100%;

      @include placeholder {
         color: css-var('form-input-font-color');
         filter: opacity(0.5);
      }

      &[disabled],
      &[readonly] {
         @include disabled;
      }

      &[disabled] {
         user-select: none;
      }

      &:focus {
         @include focus();
      }

      &[type='search'] {
         appearance: none;

         &::-webkit-search-decoration,
         &::-webkit-search-cancel-button {
            display: none;
         }
      }

      &--search[type='search'] {
         appearance: none;

         &::-webkit-search-cancel-button {
            display: block;
         }

         &::-ms-clear {
            display: block;
         }
      }

      &[contenteditable=''],
      &[contenteditable='true'] {
         height: 88px;
         overflow: auto;
         resize: vertical;
      }
   }

   select:not([multiple]) {
      height: calc(
         #{css-var('spacing-x-small')} * 2 + #{$form-input-line-height * 1em} +
            #{$border-width * 2}
      );
   }

   &-input-group {
      display: flex;
      align-items: stretch;

      &__label,
      .#{$prefix}-button,
      .#{$prefix}-form-input {
         position: relative;
         z-index: 1;
         border-radius: 0;
         margin-right: -1px;

         &:first-child {
            border-radius: css-var('form-input-border-radius') 0 0
               css-var('form-input-border-radius');
         }

         &:last-child {
            margin-right: 0;
            border-radius: 0 css-var('form-input-border-radius')
               css-var('form-input-border-radius') 0;
         }
      }

      .#{$prefix}-button {
         // No matter the order of elements,
         // button border should be on top of
         // input and label borders.
         z-index: 2;
      }

      .#{$prefix}-form-input:focus {
         // When focused, move input to top
         z-index: 3;
      }

      &__label {
         display: flex;
         align-items: center;
         border: $border-width $border-style css-var('form-input-border-color');
         box-sizing: border-box;
         color: css-var('form-input-font-color');
         font-size: css-var('font-size-medium');
         line-height: $form-input-line-height;
         padding: css-var('spacing-x-small');
      }
   }

   &-element {
      margin-bottom: css-var('spacing-medium');

      &__control {
         &--icon {
            position: relative;

            $iconSize: 1.25em;

            .env-icon {
               position: absolute;
               top: 50%;
               left: css-var('spacing-x-small');
               margin-top: ($iconSize / 2 * -1);
               width: $iconSize;
               height: $iconSize;
               color: css-var('form-input-font-color');
            }

            input:first-child {
               padding-right: calc(
                  #{$iconSize} + #{css-var('spacing-x-small')} + #{css-var(
                        'spacing-xx-small'
                     )}
               );
            }

            input + .env-icon {
               left: auto;
               right: css-var('spacing-x-small');
            }

            .env-icon + input {
               padding-left: calc(
                  #{$iconSize} + #{css-var('spacing-x-small')} + #{css-var(
                        'spacing-xx-small'
                     )}
               );
            }
         }
      }

      &__label {
         display: inline-block;
         font-size: css-var('font-size-medium');
         font-weight: $font-weight-semibold;
         margin-bottom: css-var('spacing-xx-small');
      }

      &__help,
      &__feedback {
         display: block;
         font-size: css-var('font-size-small');
         font-style: italic;
         margin-bottom: css-var('spacing-x-small');
         margin-top: css-var('spacing-x-small');
      }

      &__help {
         color: css-var('font-color-lighter');
         font-size: css-var('font-size-small');
      }

      &--success {
         @include input-validation-state('success');
      }

      &--warning {
         @include input-validation-state('warning');
      }

      &--danger {
         @include input-validation-state('danger');
      }

      &[type='file'] {
         display: block;
      }

      textarea {
         border-radius: css-var('form-input-border-radius');
         padding: css-var('spacing-x-small');
         resize: vertical;
      }
   }

   &-multiple-select {
      select[multiple] {
         padding: css-var('spacing-xx-small');
      }

      select[multiple] > option {
         padding: css-var('spacing-x-small');
      }
   }

   &-radio {
      display: block;
      font-size: css-var('font-size-medium');

      [type='radio'] {
         @include visually-hidden;
      }

      label {
         margin-bottom: css-var('spacing-x-small');
      }

      &__fake {
         display: inline-block;
         position: relative;
         width: $radiobutton-size;
         height: $radiobutton-size;
         margin-right: css-var('spacing-xx-small');
         background-color: css-var('form-input-background-color');
         border: $border-width $border-style css-var('form-input-border-color');
         border-radius: 50%;
         transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
         vertical-align: middle;

         &:after {
            content: '';
            display: none;
            width: $radiobutton-checked-size;
            height: $radiobutton-checked-size;
            background-color: css-var('element-primary-background-color');
            position: absolute;
            top: (50% - $radiobutton-checked-size / 2);
            left: (50% - $radiobutton-checked-size / 2);
            border-radius: 50%;
            box-sizing: border-box;
         }
      }

      &__label {
         display: inline;
         vertical-align: bottom;
      }

      [type='radio']:checked + label &__fake {
         border-color: css-var('element-primary-background-color');

         &:after {
            display: block;
         }
      }

      [type='radio']:focus + label &__fake {
         @include focus-shadow();
      }

      &--disabled {
         label {
            @include disabled;
         }
      }
   }

   $form-element: #{$prefix}-form-element;
   //Variants
   &--horizontal {
      .#{$form-element} {
         display: flex;
         align-items: baseline;
         flex-wrap: wrap;

         & > .#{$form-element}__label {
            flex-basis: 20%;
         }

         &__control {
            flex-basis: 80%;
         }

         &__help {
            margin-left: 20%;
         }
      }
   }

   &--inline {
      display: flex;

      .#{$form-element} {
         align-items: center;
         display: flex;
         margin-bottom: 0;
         margin-right: css-var('spacing-x-small');

         &__label {
            margin-bottom: 0;
            margin-right: css-var('spacing-x-small');
         }

         &__help {
            margin-left: css-var('spacing-xx-small');
         }
      }

      .#{$prefix}-form-radio,
      .#{$prefix}-checkbox {
         margin-bottom: 0;
      }
   }

   &__row {
      display: flex;

      .#{$form-element} {
         flex: 1;

         @for $i from 1 through 6 {
            &--#{$i} {
               flex: $i;
            }
         }

         + .#{$form-element} {
            margin-left: css-var('spacing-xx-small');
         }
      }
   }
}

.#{$prefix}-checkbox {
   display: block;
   font-size: css-var('font-size-medium');

   [type='checkbox'] {
      @include visually-hidden();
   }

   label {
      margin-bottom: css-var('spacing-x-small');
   }

   [type='checkbox']:checked + label &__fake::after {
      $tick-position: 50%;
      content: '';
      display: block;
      position: absolute;
      top: 40%;
      left: $tick-position;
      width: $checkbox-size * 0.7;
      height: $checkbox-size * 0.25;
      background-color: transparent;
      border-bottom: ($checkbox-size / 10) solid
         css-var('element-primary-font-color');
      border-left: ($checkbox-size / 10) solid
         css-var('element-primary-font-color');
      transform: translate3d(-49%, -45%, 0) rotate(-50deg);
   }

   [type='checkbox']:disabled + label &__fake,
   [type='checkbox']:disabled + label &__label {
      @include disabled;

      &:after {
         opacity: 0.7;
      }
   }

   [type='checkbox']:focus + label &__fake {
      @include focus();
   }

   &__fake {
      background-color: css-var('form-input-background-color');
      border: $border-width $border-style css-var('form-input-border-color');
      border-radius: css-var('border-radius');
      display: inline-block;
      height: $checkbox-size;
      margin-right: css-var('spacing-xx-small');
      position: relative;
      transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      vertical-align: middle;
      width: $checkbox-size;
   }

   [type='checkbox']:checked + label &__fake {
      background-color: css-var('element-primary-background-color');
   }

   &__label {
      display: inline;
      vertical-align: bottom;
   }

   &--disabled {
      label {
         color: css-var('font-color-light');
      }
   }
}

.#{$prefix}-switch {
   position: relative;
   margin-bottom: css-var('spacing-x-small');
   font-size: css-var('font-size-medium');

   input {
      @include visually-hidden;
   }

   &__label {
      display: inline-flex;
      justify-content: flex-start;
      align-items: flex-start;
      align-content: center;
   }

   &__text {
      display: inline-block;
      margin-top: 0.1875em;

      .#{$prefix}-switch__slider + & {
         margin-left: css-var('spacing-small');
      }

      input:disabled ~ & {
         @include disabled;
      }
   }

   &__slider {
      display: inline-block;
      position: relative;
      top: 0;
      left: 0;
      flex: 0 0 2.375em;
      width: 2.375em;
      height: 1.25em;
      border-radius: 0.75em;
      border: 0.125em solid css-var('element-common-background-color-dark');
      background-color: css-var('element-common-background-color-dark');
      transition: 0.3s;

      .#{$prefix}-switch__text + & {
         margin-left: css-var('spacing-small');
      }

      &:before {
         position: absolute;
         content: '';
         height: 1.25em;
         width: 1.25em;
         border-radius: 50%;
         left: 0;
         top: 0;
         background-color: css-var('element-primary-font-color');
         transition: 0.3s;

         input:checked ~ & {
            transform: translateX(1.125em);
         }
      }

      input:checked ~ & {
         background-color: css-var('element-primary-background-color');
         border-color: css-var('element-primary-background-color');
      }

      input:focus ~ & {
         @include focus();
      }

      input:disabled ~ & {
         @include disabled(false);

         &:before {
            opacity: 0.5;
         }
      }
   }
}
