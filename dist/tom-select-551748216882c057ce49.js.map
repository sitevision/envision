{"version":3,"file":"tom-select-551748216882c057ce49.js","mappings":"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","sources":["webpack://envision/../../node_modules/tom-select/dist/js/tom-select.complete.js"],"sourcesContent":["/**\n* Tom Select v2.2.2\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      const event_array = this._events[event] || [];\n\t      event_array.push(fct);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) {\n\t        delete this._events[event];\n\t        return;\n\t      }\n\n\t      const event_array = this._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.splice(event_array.indexOf(fct), 1);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      const event_array = self._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.forEach(fct => {\n\t        fct.apply(self, args);\n\t      });\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {string[]} chars\n\t * @return {string}\n\t */\n\tconst arrayToPattern = chars => {\n\t  chars = chars.filter(Boolean);\n\n\t  if (chars.length < 2) {\n\t    return chars[0] || '';\n\t  }\n\n\t  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n\t};\n\t/**\n\t * @param {string[]} array\n\t * @return {string}\n\t */\n\n\tconst sequencePattern = array => {\n\t  if (!hasDuplicates(array)) {\n\t    return array.join('');\n\t  }\n\n\t  let pattern = '';\n\t  let prev_char_count = 0;\n\n\t  const prev_pattern = () => {\n\t    if (prev_char_count > 1) {\n\t      pattern += '{' + prev_char_count + '}';\n\t    }\n\t  };\n\n\t  array.forEach((char, i) => {\n\t    if (char === array[i - 1]) {\n\t      prev_char_count++;\n\t      return;\n\t    }\n\n\t    prev_pattern();\n\t    pattern += char;\n\t    prev_char_count = 1;\n\t  });\n\t  prev_pattern();\n\t  return pattern;\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {Set<string>} chars\n\t * @return {string}\n\t */\n\n\tconst setToPattern = chars => {\n\t  let array = toArray(chars);\n\t  return arrayToPattern(array);\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n\t * @param {any[]} array\n\t */\n\n\tconst hasDuplicates = array => {\n\t  return new Set(array).size !== array.length;\n\t};\n\t/**\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n\t};\n\t/**\n\t * Return the max length of array values\n\t * @param {string[]} array\n\t *\n\t */\n\n\tconst maxValueLength = array => {\n\t  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n\t};\n\t/**\n\t * @param {string} str\n\t */\n\n\tconst unicodeLength = str => {\n\t  return toArray(str).length;\n\t};\n\t/**\n\t * @param {any} p\n\t * @return {any[]}\n\t */\n\n\tconst toArray = p => Array.from(p);\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t * @param {string} input\n\t * @return {string[][]}\n\t */\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  /** @type {string[][]} */\n\n\t  let result = [];\n\t  const start = input.substring(1);\n\t  const suba = allSubstrings(start);\n\t  suba.forEach(function (subresult) {\n\t    let tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n\t/**\n\t * @typedef {{[key:string]:string}} TUnicodeMap\n\t * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n\t * @typedef {[[number,number]]} TCodePoints\n\t * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n\t * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n\t */\n\t/** @type {TCodePoints} */\n\n\tconst code_points = [[0, 65535]];\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\t/** @type {TUnicodeMap} */\n\n\tlet unicode_map;\n\t/** @type {RegExp} */\n\n\tlet multi_char_reg;\n\tconst max_char_length = 3;\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_convert = {};\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_condensed = {\n\t  '/': '⁄∕',\n\t  '0': '߀',\n\t  \"a\": \"ⱥɐɑ\",\n\t  \"aa\": \"ꜳ\",\n\t  \"ae\": \"æǽǣ\",\n\t  \"ao\": \"ꜵ\",\n\t  \"au\": \"ꜷ\",\n\t  \"av\": \"ꜹꜻ\",\n\t  \"ay\": \"ꜽ\",\n\t  \"b\": \"ƀɓƃ\",\n\t  \"c\": \"ꜿƈȼↄ\",\n\t  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t  \"e\": \"ɛǝᴇɇ\",\n\t  \"f\": \"ꝼƒ\",\n\t  \"g\": \"ǥɠꞡᵹꝿɢ\",\n\t  \"h\": \"ħⱨⱶɥ\",\n\t  \"i\": \"ɨı\",\n\t  \"j\": \"ɉȷ\",\n\t  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t  \"m\": \"ɱɯϻ\",\n\t  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t  \"o\": \"øǿɔɵꝋꝍᴑ\",\n\t  \"oe\": \"œ\",\n\t  \"oi\": \"ƣ\",\n\t  \"oo\": \"ꝏ\",\n\t  \"ou\": \"ȣ\",\n\t  \"p\": \"ƥᵽꝑꝓꝕρ\",\n\t  \"q\": \"ꝗꝙɋ\",\n\t  \"r\": \"ɍɽꝛꞧꞃ\",\n\t  \"s\": \"ßȿꞩꞅʂ\",\n\t  \"t\": \"ŧƭʈⱦꞇ\",\n\t  \"th\": \"þ\",\n\t  \"tz\": \"ꜩ\",\n\t  \"u\": \"ʉ\",\n\t  \"v\": \"ʋꝟʌ\",\n\t  \"vy\": \"ꝡ\",\n\t  \"w\": \"ⱳ\",\n\t  \"y\": \"ƴɏỿ\",\n\t  \"z\": \"ƶȥɀⱬꝣ\",\n\t  \"hv\": \"ƕ\"\n\t};\n\n\tfor (let latin in latin_condensed) {\n\t  let unicode = latin_condensed[latin] || '';\n\n\t  for (let i = 0; i < unicode.length; i++) {\n\t    let char = unicode.substring(i, i + 1);\n\t    latin_convert[char] = latin;\n\t  }\n\t}\n\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n\t/**\n\t * Initialize the unicode_map from the give code point ranges\n\t *\n\t * @param {TCodePoints=} _code_points\n\t */\n\n\tconst initialize = _code_points => {\n\t  if (unicode_map !== undefined) return;\n\t  unicode_map = generateMap(_code_points || code_points);\n\t};\n\t/**\n\t * Helper method for normalize a string\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t * @param {string} str\n\t * @param {string} form\n\t */\n\n\tconst normalize = (str, form = 'NFKD') => str.normalize(form);\n\t/**\n\t * Remove accents without reordering string\n\t * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst asciifold = str => {\n\t  return toArray(str).reduce(\n\t  /**\n\t   * @param {string} result\n\t   * @param {string} char\n\t   */\n\t  (result, char) => {\n\t    return result + _asciifold(char);\n\t  }, '');\n\t};\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst _asciifold = str => {\n\t  str = normalize(str).toLowerCase().replace(convert_pat, (\n\t  /** @type {string} */\n\t  char) => {\n\t    return latin_convert[char] || '';\n\t  }); //return str;\n\n\t  return normalize(str, 'NFC');\n\t};\n\t/**\n\t * Generate a list of unicode variants from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @yield {TCodePointObj}\n\t */\n\n\tfunction* generator(code_points) {\n\t  for (const [code_point_min, code_point_max] of code_points) {\n\t    for (let i = code_point_min; i <= code_point_max; i++) {\n\t      let composed = String.fromCharCode(i);\n\t      let folded = asciifold(composed);\n\n\t      if (folded == composed.toLowerCase()) {\n\t        continue;\n\t      } // skip when folded is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // folded صلى الله عليه وسلم length 18 code point 65018\n\t      // folded جل جلاله length 8 code point 65019\n\n\n\t      if (folded.length > max_char_length) {\n\t        continue;\n\t      }\n\n\t      if (folded.length == 0) {\n\t        continue;\n\t      }\n\n\t      yield {\n\t        folded: folded,\n\t        composed: composed,\n\t        code_point: i\n\t      };\n\t    }\n\t  }\n\t}\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeSets}\n\t */\n\n\tconst generateSets = code_points => {\n\t  /** @type {{[key:string]:Set<string>}} */\n\t  const unicode_sets = {};\n\t  /**\n\t   * @param {string} folded\n\t   * @param {string} to_add\n\t   */\n\n\t  const addMatching = (folded, to_add) => {\n\t    /** @type {Set<string>} */\n\t    const folded_set = unicode_sets[folded] || new Set();\n\t    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n\t    if (to_add.match(patt)) {\n\t      return;\n\t    }\n\n\t    folded_set.add(escape_regex(to_add));\n\t    unicode_sets[folded] = folded_set;\n\t  };\n\n\t  for (let value of generator(code_points)) {\n\t    addMatching(value.folded, value.folded);\n\t    addMatching(value.folded, value.composed);\n\t  }\n\n\t  return unicode_sets;\n\t};\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\t *\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeMap}\n\t */\n\n\tconst generateMap = code_points => {\n\t  /** @type {TUnicodeSets} */\n\t  const unicode_sets = generateSets(code_points);\n\t  /** @type {TUnicodeMap} */\n\n\t  const unicode_map = {};\n\t  /** @type {string[]} */\n\n\t  let multi_char = [];\n\n\t  for (let folded in unicode_sets) {\n\t    let set = unicode_sets[folded];\n\n\t    if (set) {\n\t      unicode_map[folded] = setToPattern(set);\n\t    }\n\n\t    if (folded.length > 1) {\n\t      multi_char.push(escape_regex(folded));\n\t    }\n\t  }\n\n\t  multi_char.sort((a, b) => b.length - a.length);\n\t  const multi_char_patt = arrayToPattern(multi_char);\n\t  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n\t  return unicode_map;\n\t};\n\t/**\n\t * Map each element of an array from it's folded value to all possible unicode matches\n\t * @param {string[]} strings\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst mapSequence = (strings, min_replacement = 1) => {\n\t  let chars_replaced = 0;\n\t  strings = strings.map(str => {\n\t    if (unicode_map[str]) {\n\t      chars_replaced += str.length;\n\t    }\n\n\t    return unicode_map[str] || str;\n\t  });\n\n\t  if (chars_replaced >= min_replacement) {\n\t    return sequencePattern(strings);\n\t  }\n\n\t  return '';\n\t};\n\t/**\n\t * Convert a short string and split it into all possible patterns\n\t * Keep a pattern only if min_replacement is met\n\t *\n\t * 'abc'\n\t * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n\t *\t\t=> ['abc-pattern','ab-c-pattern'...]\n\t *\n\t *\n\t * @param {string} str\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst substringsToPattern = (str, min_replacement = 1) => {\n\t  min_replacement = Math.max(min_replacement, str.length - 1);\n\t  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n\t    return mapSequence(sub_pat, min_replacement);\n\t  }));\n\t};\n\t/**\n\t * Convert an array of sequences into a pattern\n\t * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n\t *\n\t * @param {Sequence[]} sequences\n\t * @param {boolean} all\n\t */\n\n\tconst sequencesToPattern = (sequences, all = true) => {\n\t  let min_replacement = sequences.length > 1 ? 1 : 0;\n\t  return arrayToPattern(sequences.map(sequence => {\n\t    let seq = [];\n\t    const len = all ? sequence.length() : sequence.length() - 1;\n\n\t    for (let j = 0; j < len; j++) {\n\t      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n\t    }\n\n\t    return sequencePattern(seq);\n\t  }));\n\t};\n\t/**\n\t * Return true if the sequence is already in the sequences\n\t * @param {Sequence} needle_seq\n\t * @param {Sequence[]} sequences\n\t */\n\n\n\tconst inSequences = (needle_seq, sequences) => {\n\t  for (const seq of sequences) {\n\t    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n\t      continue;\n\t    }\n\n\t    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n\t      continue;\n\t    }\n\n\t    let needle_parts = needle_seq.parts;\n\t    /**\n\t     * @param {TSequencePart} part\n\t     */\n\n\t    const filter = part => {\n\t      for (const needle_part of needle_parts) {\n\t        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n\t          return false;\n\t        }\n\n\t        if (part.length == 1 || needle_part.length == 1) {\n\t          continue;\n\t        } // check for overlapping parts\n\t        // a = ['::=','==']\n\t        // b = ['::','===']\n\t        // a = ['r','sm']\n\t        // b = ['rs','m']\n\n\n\t        if (part.start < needle_part.start && part.end > needle_part.start) {\n\t          return true;\n\t        }\n\n\t        if (needle_part.start < part.start && needle_part.end > part.start) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    let filtered = seq.parts.filter(filter);\n\n\t    if (filtered.length > 0) {\n\t      continue;\n\t    }\n\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tclass Sequence {\n\t  constructor() {\n\t    /** @type {TSequencePart[]} */\n\t    this.parts = [];\n\t    /** @type {string[]} */\n\n\t    this.substrs = [];\n\t    this.start = 0;\n\t    this.end = 0;\n\t  }\n\t  /**\n\t   * @param {TSequencePart|undefined} part\n\t   */\n\n\n\t  add(part) {\n\t    if (part) {\n\t      this.parts.push(part);\n\t      this.substrs.push(part.substr);\n\t      this.start = Math.min(part.start, this.start);\n\t      this.end = Math.max(part.end, this.end);\n\t    }\n\t  }\n\n\t  last() {\n\t    return this.parts[this.parts.length - 1];\n\t  }\n\n\t  length() {\n\t    return this.parts.length;\n\t  }\n\t  /**\n\t   * @param {number} position\n\t   * @param {TSequencePart} last_piece\n\t   */\n\n\n\t  clone(position, last_piece) {\n\t    let clone = new Sequence();\n\t    let parts = JSON.parse(JSON.stringify(this.parts));\n\t    let last_part = parts.pop();\n\n\t    for (const part of parts) {\n\t      clone.add(part);\n\t    }\n\n\t    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n\t    let clone_last_len = last_substr.length;\n\t    clone.add({\n\t      start: last_part.start,\n\t      end: last_part.start + clone_last_len,\n\t      length: clone_last_len,\n\t      substr: last_substr\n\t    });\n\t    return clone;\n\t  }\n\n\t}\n\t/**\n\t * Expand a regular expression pattern to include unicode variants\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t * Issue:\n\t *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n\t *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n\t *\n\t *\tİĲ = IIJ = ⅡJ\n\t *\n\t * \t1/2/4\n\t *\n\t * @param {string} str\n\t * @return {string|undefined}\n\t */\n\n\n\tconst getPattern = str => {\n\t  initialize();\n\t  str = asciifold(str);\n\t  let pattern = '';\n\t  let sequences = [new Sequence()];\n\n\t  for (let i = 0; i < str.length; i++) {\n\t    let substr = str.substring(i);\n\t    let match = substr.match(multi_char_reg);\n\t    const char = str.substring(i, i + 1);\n\t    const match_str = match ? match[0] : null; // loop through sequences\n\t    // add either the char or multi_match\n\n\t    let overlapping = [];\n\t    let added_types = new Set();\n\n\t    for (const sequence of sequences) {\n\t      const last_piece = sequence.last();\n\n\t      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n\t        // if we have a multi match\n\t        if (match_str) {\n\t          const len = match_str.length;\n\t          sequence.add({\n\t            start: i,\n\t            end: i + len,\n\t            length: len,\n\t            substr: match_str\n\t          });\n\t          added_types.add('1');\n\t        } else {\n\t          sequence.add({\n\t            start: i,\n\t            end: i + 1,\n\t            length: 1,\n\t            substr: char\n\t          });\n\t          added_types.add('2');\n\t        }\n\t      } else if (match_str) {\n\t        let clone = sequence.clone(i, last_piece);\n\t        const len = match_str.length;\n\t        clone.add({\n\t          start: i,\n\t          end: i + len,\n\t          length: len,\n\t          substr: match_str\n\t        });\n\t        overlapping.push(clone);\n\t      } else {\n\t        // don't add char\n\t        // adding would create invalid patterns: 234 => [2,34,4]\n\t        added_types.add('3');\n\t      }\n\t    } // if we have overlapping\n\n\n\t    if (overlapping.length > 0) {\n\t      // ['ii','iii'] before ['i','i','iii']\n\t      overlapping = overlapping.sort((a, b) => {\n\t        return a.length() - b.length();\n\t      });\n\n\t      for (let clone of overlapping) {\n\t        // don't add if we already have an equivalent sequence\n\t        if (inSequences(clone, sequences)) {\n\t          continue;\n\t        }\n\n\t        sequences.push(clone);\n\t      }\n\n\t      continue;\n\t    } // if we haven't done anything unique\n\t    // clean up the patterns\n\t    // helps keep patterns smaller\n\t    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n\t    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n\t      pattern += sequencesToPattern(sequences, false);\n\t      let new_seq = new Sequence();\n\t      const old_seq = sequences[0];\n\n\t      if (old_seq) {\n\t        new_seq.add(old_seq.last());\n\t      }\n\n\t      sequences = [new_seq];\n\t    }\n\t  }\n\n\t  pattern += sequencesToPattern(sequences, true);\n\t  return pattern;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  if (token.regex == null) return 0;\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate$1 = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = getPattern(word) || null;\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {T.ScoreFn}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\t  /**\n\t   * @returns {T.ScoreFn}\n\t   *\n\t   */\n\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate$1(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var score,\n\t            sum = 0;\n\n\t        for (let token of tokens) {\n\t          score = scoreObject(token, data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate$1(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var implicit_score,\n\t        sort_flds = [];\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (let s of sort) {\n\t        if (search.query || s.field !== '$score') {\n\t          sort_flds.push(s);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (let fld of sort_flds) {\n\t        if (fld.field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      } // without a search.query, all items will have the same score\n\n\t    } else {\n\t      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    }\n\n\t    return function (a, b) {\n\t      var result, field;\n\n\t      for (let sort_fld of sort_flds) {\n\t        field = sort_fld.field;\n\t        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\t        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n\t        if (result) return result;\n\t      }\n\n\t      return 0;\n\t    };\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate$1(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate$1(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (isHtmlString(query)) {\n\t    var tpl = document.createElement('template');\n\t    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return tpl.content.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t};\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t};\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Replace a node\n\t */\n\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  } // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\n\t    return 0;\n\t  }; // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      Array.from(node.childNodes).forEach(element => {\n\t        highlightRecursive(element);\n\t      });\n\t    }\n\t  };\n\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\n\t  highlightRecursive(element);\n\t};\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\t/**\n\t * Add event helper\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\t/**\n\t *\n\t */\n\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  // @deprecated 1.8\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    }); // option-dependent defaults\n\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates(); // Create all elements\n\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\n\t    const dropdown = this._render('dropdown');\n\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\t      iterate$1(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input; // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\n\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\n\t    self.control_input.type = input.type;\n\t    addEvent(dropdown, 'mousemove', () => {\n\t      self.ignoreHover = false;\n\t    });\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    }); // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    }); // keydown on focus_node for arrow_down/arrow_up\n\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\n\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', () => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options); // build optgroup table\n\n\t    iterate$1(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\n\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick() {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown() {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    } // Wait for pasted text to be recognized in value\n\n\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate$1(splitInput, piece => {\n\t        const hash = hash_key(piece);\n\n\t        if (hash) {\n\t          if (this.options[piece]) {\n\t            self.addItem(piece);\n\t          } else {\n\t            self.createItem(piece);\n\t          }\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // return: select active option\n\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e); // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onInput(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\n\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\n\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\n\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.hideInput();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate$1(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\n\t      self.isInputHidden = false;\n\t    }\n\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (self.settings.hideSelected) {\n\t      result.items = result.items.filter(item => {\n\t        let hashed = hash_key(item.id);\n\t        return !(hashed && self.items.indexOf(hashed) !== -1);\n\t      });\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n\t    var results = self.search(query);\n\t    var active_option = null;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\n\t    if (same_query) {\n\t      active_option = self.activeOption;\n\n\t      if (active_option) {\n\t        active_group = active_option.closest('[data-group]');\n\t      }\n\t    } // build markup\n\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let item = results.items[i];\n\t      if (!item) continue;\n\t      let opt_value = item.id;\n\t      let option = self.options[opt_value];\n\t      if (option === undefined) continue;\n\t      let opt_hash = get_hash(opt_value);\n\t      let option_el = self.getOption(opt_hash, true); // toggle 'selected' class\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        let group_fragment = groups[optgroup];\n\n\t        if (group_fragment === undefined) {\n\t          group_fragment = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active'); // make sure we keep the activeOption in the same group\n\n\t          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n\t            if (active_group && active_group.dataset.group === optgroup.toString()) {\n\t              active_option = option_el;\n\t            }\n\t          }\n\t        }\n\n\t        group_fragment.appendChild(option_el);\n\t        groups[optgroup] = group_fragment;\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (self.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        const grp_a = self.optgroups[a];\n\t        const grp_b = self.optgroups[b];\n\t        const a_order = grp_a && grp_a.$order || 0;\n\t        const b_order = grp_b && grp_b.$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\t    iterate$1(groups_order, optgroup => {\n\t      let group_fragment = groups[optgroup];\n\t      if (!group_fragment || !group_fragment.children.length) return;\n\t      let group_heading = self.optgroups[optgroup];\n\n\t      if (group_heading !== undefined) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', group_heading);\n\t        append(group_options, header);\n\t        append(group_options, group_fragment);\n\t        let group_html = self.render('optgroup', {\n\t          group: group_heading,\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, group_fragment);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate$1(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // add loading message\n\n\n\t    if (self.loading) {\n\t      add_template('loading'); // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data, user_created = false) {\n\t    const self = this; // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\n\t    const key = hash_key(data[self.settings.valueField]);\n\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\n\t    return key;\n\t  }\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\n\n\t  addOptions(data, user_created = false) {\n\t    iterate$1(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\n\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n\t    if (value_old === null) return;\n\t    const data_old = self.options[value_old];\n\t    if (data_old == undefined) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || data_old.$order;\n\t    delete self.options[value_old]; // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data; // update the option if it's in the dropdown\n\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\n\t        replaceNode(option, option_new);\n\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\n\t      option.remove();\n\t    } // update the item if we have one\n\n\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null;\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate$1(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = option;\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\n\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return null;\n\t    const option = this.options[hashed];\n\n\t    if (option != undefined) {\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return null;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\t    const last_item = items[items.length - 1];\n\t    items.forEach(item => {\n\t      self.isPending = item !== last_item;\n\t      self.addItem(item, silent);\n\t    });\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', hashed, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input = null, callback = () => {}) {\n\t    // triggerDropdown parameter @deprecated 2.1.1\n\t    if (arguments.length === 3) {\n\t      callback = arguments[2];\n\t    }\n\n\t    if (typeof callback != 'function') {\n\t      callback = () => {};\n\t    }\n\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        } // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\n\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\n\t        selected.push(option_el); // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\n\t        return option_el;\n\t      } // unselect all selected options\n\n\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      }); // nothing selected?\n\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput();\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate$1(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.showInput();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret] || null);\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    const rm_items = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      iterate$1(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\t      let rm_item;\n\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_item = items[self.caretPos - 1];\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_item = items[self.caretPos];\n\t      }\n\n\t      if (rm_item !== undefined) {\n\t        rm_items.push(rm_item);\n\t      }\n\t    }\n\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\n\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value); // allow the callback to abort\n\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\n\t  moveCaret(direction) {}\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.focus_node.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    this.close();\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.focus_node.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    var id, html;\n\t    const self = this;\n\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    } // render markup\n\n\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\n\t    if (!html) {\n\t      return null;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      const value = get_hash(data[self.settings.valueField]);\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        }); // update cache\n\n\t        data.$div = html;\n\t        self.options[value] = data;\n\t      }\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Type guarded rendering\n\t   *\n\t   */\n\n\n\t  _render(templateName, data) {\n\t    const html = this.render(templateName, data);\n\n\t    if (html == null) {\n\t      throw 'HTMLElement expected';\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache() {\n\t    iterate$1(this.options, option => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\n\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction checkbox_options () {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        if (option.classList.contains('selected')) {\n\t          checkbox.checked = true;\n\t        } else {\n\t          checkbox.checked = false;\n\t        }\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\n\t      if (hashed && self.items.indexOf(hashed) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // check when item added\n\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isDisabled) {\n\t        return;\n\t      }\n\n\t      self.clear();\n\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.call(self);\n\t  });\n\t  self.on('initialize', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          if (this.dataset.value) values.push(this.dataset.value);\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction caret_position () {\n\t  var self = this;\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return; // move caret before or after selected items\n\n\t    const last_active = self.getLastActive(direction);\n\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active'); // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild); // set a placeholder in the select control\n\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\n\t          self.clearActiveItems();\n\t          return;\n\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    }); // give the control_input focus when the dropdown is open\n\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    }); // prevent onBlur from closing when focus is on the control_input\n\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = Array.from(selectable).indexOf(self.activeOption);\n\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\t  }\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  };\n\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }; // set the next url that will be\n\n\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl.call(self, query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt) {\n\t      const first_option = options[0];\n\n\t      if (first_option !== undefined) {\n\t        load_more_opt.dataset.value = first_option[self.settings.valueField];\n\t      }\n\t    }\n\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n"],"names":["module","exports","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","MicroPlugin","Interface","plugins","super","names","settings","requested","loaded","define","name","fn","initializePlugins","key","queue","Array","isArray","plugin","options","hasOwnProperty","shift","require","loadPlugin","Error","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","accent_pat","unicode_map","multi_char_reg","max_char_length","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","Object","keys","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","toLowerCase","generator","code_point_min","code_point_max","composed","String","fromCharCode","folded","code_point","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","match","add","multi_char","set","sort","a","b","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","map","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","getAttrNesting","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate$1","object","cmp","Sifter","items","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","addGroup","settings_element","init_textbox","data_raw","opt","values","dataset","json","group","arr","option_data","disabled","$option","selected","optgroup","optgroup_data","children","hasAttribute","child","instance_i","TomSelect","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","toString","grp_a","grp_b","$order","group_heading","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","checked","orig_render_option","rendered","prepend","clear_button","title","button","drag_drop","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","div","orig_onBlur","relatedTarget","preventScroll","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","nextSibling","remove_button","orig_render_item","close_button","restore_on_backspace","text","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","first_option","no_more_results","factory"],"sourceRoot":""}