{"version":3,"file":"tom-select-80a5dbdd3e247a20b9f4.js","mappings":"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","sources":["webpack://envision/../../node_modules/tom-select/dist/esm/contrib/microevent.js","webpack://envision/../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","webpack://envision/../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","webpack://envision/../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","webpack://envision/../../node_modules/@orchidjs/sifter/dist/esm/utils.js","webpack://envision/../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","webpack://envision/../../node_modules/tom-select/dist/esm/utils.js","webpack://envision/../../node_modules/tom-select/dist/esm/vanilla.js","webpack://envision/../../node_modules/tom-select/dist/esm/contrib/highlight.js","webpack://envision/../../node_modules/tom-select/dist/esm/constants.js","webpack://envision/../../node_modules/tom-select/dist/esm/defaults.js","webpack://envision/../../node_modules/tom-select/dist/esm/getSettings.js","webpack://envision/../../node_modules/tom-select/dist/esm/tom-select.js","webpack://envision/../../node_modules/tom-select/dist/esm/contrib/microplugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/checkbox_options/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/clear_button/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/drag_drop/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/dropdown_header/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/caret_position/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/dropdown_input/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/input_autogrow/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/remove_button/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/virtual_scroll/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/tom-select.complete.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/change_listener/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/no_backspace_delete/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/no_active_items/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/optgroup_columns/plugin.js","webpack://envision/../../node_modules/tom-select/dist/esm/plugins/restore_on_backspace/plugin.js"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events, callback) {\n    events.split(/\\s+/).forEach((event) => {\n        callback(event);\n    });\n}\nexport default class MicroEvent {\n    constructor() {\n        this._events = {};\n    }\n    on(events, fct) {\n        forEvents(events, (event) => {\n            const event_array = this._events[event] || [];\n            event_array.push(fct);\n            this._events[event] = event_array;\n        });\n    }\n    off(events, fct) {\n        var n = arguments.length;\n        if (n === 0) {\n            this._events = {};\n            return;\n        }\n        forEvents(events, (event) => {\n            if (n === 1) {\n                delete this._events[event];\n                return;\n            }\n            const event_array = this._events[event];\n            if (event_array === undefined)\n                return;\n            event_array.splice(event_array.indexOf(fct), 1);\n            this._events[event] = event_array;\n        });\n    }\n    trigger(events, ...args) {\n        var self = this;\n        forEvents(events, (event) => {\n            const event_array = self._events[event];\n            if (event_array === undefined)\n                return;\n            event_array.forEach(fct => {\n                fct.apply(self, args);\n            });\n        });\n    }\n}\n;\n//# sourceMappingURL=microevent.js.map","/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const arrayToPattern = (chars) => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n        return chars[0] || '';\n    }\n    return (maxValueLength(chars) == 1) ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\nexport const sequencePattern = (array) => {\n    if (!hasDuplicates(array)) {\n        return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n        if (prev_char_count > 1) {\n            pattern += '{' + prev_char_count + '}';\n        }\n    };\n    array.forEach((char, i) => {\n        if (char === array[i - 1]) {\n            prev_char_count++;\n            return;\n        }\n        prev_pattern();\n        pattern += char;\n        prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const setToPattern = (chars) => {\n    let array = Array.from(chars);\n    return arrayToPattern(array);\n};\n/**\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n */\nexport const hasDuplicates = (array) => {\n    return (new Set(array)).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str) => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n */\nexport const maxValueLength = (array) => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\nexport const unicodeLength = (str) => {\n    return Array.from(str).length;\n};\n//# sourceMappingURL=regex.js.map","/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n */\nexport const allSubstrings = (input) => {\n    if (input.length === 1)\n        return [[input]];\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    return result;\n};\n//# sourceMappingURL=strings.js.map","import { setToPattern, arrayToPattern, escape_regex, sequencePattern } from \"./regex.js\";\nimport { allSubstrings } from \"./strings.js\";\nexport const code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\nexport let unicode_map;\nlet multi_char_reg;\nconst max_char_length = 3;\nconst latin_convert = {};\nconst latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n};\nfor (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n        let char = unicode.substring(i, i + 1);\n        latin_convert[char] = latin;\n    }\n}\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n */\nexport const initialize = (_code_points) => {\n    if (unicode_map !== undefined)\n        return;\n    unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nexport const normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n */\nexport const asciifold = (str) => {\n    return Array.from(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n        return result + _asciifold(char);\n    }, '');\n};\nexport const _asciifold = (str) => {\n    str = normalize(str)\n        .toLowerCase()\n        .replace(convert_pat, (/** @type {string} */ char) => {\n        return latin_convert[char] || '';\n    });\n    //return str;\n    return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n */\nexport function* generator(code_points) {\n    for (const [code_point_min, code_point_max] of code_points) {\n        for (let i = code_point_min; i <= code_point_max; i++) {\n            let composed = String.fromCharCode(i);\n            let folded = asciifold(composed);\n            if (folded == composed.toLowerCase()) {\n                continue;\n            }\n            // skip when folded is a string longer than 3 characters long\n            // bc the resulting regex patterns will be long\n            // eg:\n            // folded صلى الله عليه وسلم length 18 code point 65018\n            // folded جل جلاله length 8 code point 65019\n            if (folded.length > max_char_length) {\n                continue;\n            }\n            if (folded.length == 0) {\n                continue;\n            }\n            yield { folded: folded, composed: composed, code_point: i };\n        }\n    }\n}\n/**\n * Generate a unicode map from the list of code points\n */\nexport const generateSets = (code_points) => {\n    const unicode_sets = {};\n    const addMatching = (folded, to_add) => {\n        /** @type {Set<string>} */\n        const folded_set = unicode_sets[folded] || new Set();\n        const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n        if (to_add.match(patt)) {\n            return;\n        }\n        folded_set.add(escape_regex(to_add));\n        unicode_sets[folded] = folded_set;\n    };\n    for (let value of generator(code_points)) {\n        addMatching(value.folded, value.folded);\n        addMatching(value.folded, value.composed);\n    }\n    return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n */\nexport const generateMap = (code_points) => {\n    const unicode_sets = generateSets(code_points);\n    const unicode_map = {};\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n        let set = unicode_sets[folded];\n        if (set) {\n            unicode_map[folded] = setToPattern(set);\n        }\n        if (folded.length > 1) {\n            multi_char.push(escape_regex(folded));\n        }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n};\n/**\n * Map each element of an array from its folded value to all possible unicode matches\n */\nexport const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map((str) => {\n        if (unicode_map[str]) {\n            chars_replaced += str.length;\n        }\n        return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n        return sequencePattern(strings);\n    }\n    return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n */\nexport const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map((sub_pat) => {\n        return mapSequence(sub_pat, min_replacement);\n    }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n */\nconst sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map((sequence) => {\n        let seq = [];\n        const len = all ? sequence.length() : sequence.length() - 1;\n        for (let j = 0; j < len; j++) {\n            seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n        }\n        return sequencePattern(seq);\n    }));\n};\n/**\n * Return true if the sequence is already in the sequences\n */\nconst inSequences = (needle_seq, sequences) => {\n    for (const seq of sequences) {\n        if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n            continue;\n        }\n        if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n            continue;\n        }\n        let needle_parts = needle_seq.parts;\n        const filter = (part) => {\n            for (const needle_part of needle_parts) {\n                if (needle_part.start === part.start && needle_part.substr === part.substr) {\n                    return false;\n                }\n                if (part.length == 1 || needle_part.length == 1) {\n                    continue;\n                }\n                // check for overlapping parts\n                // a = ['::=','==']\n                // b = ['::','===']\n                // a = ['r','sm']\n                // b = ['rs','m']\n                if (part.start < needle_part.start && part.end > needle_part.start) {\n                    return true;\n                }\n                if (needle_part.start < part.start && needle_part.end > part.start) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        let filtered = seq.parts.filter(filter);\n        if (filtered.length > 0) {\n            continue;\n        }\n        return true;\n    }\n    return false;\n};\nclass Sequence {\n    parts;\n    substrs;\n    start;\n    end;\n    constructor() {\n        this.parts = [];\n        this.substrs = [];\n        this.start = 0;\n        this.end = 0;\n    }\n    add(part) {\n        if (part) {\n            this.parts.push(part);\n            this.substrs.push(part.substr);\n            this.start = Math.min(part.start, this.start);\n            this.end = Math.max(part.end, this.end);\n        }\n    }\n    last() {\n        return this.parts[this.parts.length - 1];\n    }\n    length() {\n        return this.parts.length;\n    }\n    clone(position, last_piece) {\n        let clone = new Sequence();\n        let parts = JSON.parse(JSON.stringify(this.parts));\n        let last_part = parts.pop();\n        for (const part of parts) {\n            clone.add(part);\n        }\n        let last_substr = last_piece.substr.substring(0, position - last_part.start);\n        let clone_last_len = last_substr.length;\n        clone.add({ start: last_part.start, end: last_part.start + clone_last_len, length: clone_last_len, substr: last_substr });\n        return clone;\n    }\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n */\nexport const getPattern = (str) => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n        let substr = str.substring(i);\n        let match = substr.match(multi_char_reg);\n        const char = str.substring(i, i + 1);\n        const match_str = match ? match[0] : null;\n        // loop through sequences\n        // add either the char or multi_match\n        let overlapping = [];\n        let added_types = new Set();\n        for (const sequence of sequences) {\n            const last_piece = sequence.last();\n            if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n                // if we have a multi match\n                if (match_str) {\n                    const len = match_str.length;\n                    sequence.add({ start: i, end: i + len, length: len, substr: match_str });\n                    added_types.add('1');\n                }\n                else {\n                    sequence.add({ start: i, end: i + 1, length: 1, substr: char });\n                    added_types.add('2');\n                }\n            }\n            else if (match_str) {\n                let clone = sequence.clone(i, last_piece);\n                const len = match_str.length;\n                clone.add({ start: i, end: i + len, length: len, substr: match_str });\n                overlapping.push(clone);\n            }\n            else {\n                // don't add char\n                // adding would create invalid patterns: 234 => [2,34,4]\n                added_types.add('3');\n            }\n        }\n        // if we have overlapping\n        if (overlapping.length > 0) {\n            // ['ii','iii'] before ['i','i','iii']\n            overlapping = overlapping.sort((a, b) => {\n                return a.length() - b.length();\n            });\n            for (let clone of overlapping) {\n                // don't add if we already have an equivalent sequence\n                if (inSequences(clone, sequences)) {\n                    continue;\n                }\n                sequences.push(clone);\n            }\n            continue;\n        }\n        // if we haven't done anything unique\n        // clean up the patterns\n        // helps keep patterns smaller\n        // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n        if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n            pattern += sequencesToPattern(sequences, false);\n            let new_seq = new Sequence();\n            const old_seq = sequences[0];\n            if (old_seq) {\n                new_seq.add(old_seq.last());\n            }\n            sequences = [new_seq];\n        }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n};\nexport { escape_regex };\n//# sourceMappingURL=index.js.map","import { asciifold } from '@orchidjs/unicode-variants';\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj, name) => {\n    if (!obj)\n        return;\n    return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj, name) => {\n    if (!obj)\n        return;\n    var part, names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]))\n        ;\n    return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value)\n        return 0;\n    value = value + '';\n    if (token.regex == null)\n        return 0;\n    pos = value.search(token.regex);\n    if (pos === -1)\n        return 0;\n    score = token.string.length / value.length;\n    if (pos === 0)\n        score += 0.5;\n    return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function')\n        return value;\n    if (value && !Array.isArray(value)) {\n        obj[key] = [value];\n    }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n        object.forEach(callback);\n    }\n    else {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                callback(object[key], key);\n            }\n        }\n    }\n};\nexport const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n        return a > b ? 1 : (a < b ? -1 : 0);\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b)\n        return 1;\n    if (b > a)\n        return -1;\n    return 0;\n};\n//# sourceMappingURL=utils.js.map","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nimport { scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp } from \"./utils.js\";\nimport { getPattern, escape_regex } from '@orchidjs/unicode-variants';\nclass Sifter {\n    items; // []|{};\n    settings;\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n        this.items = items;\n        this.settings = settings || { diacritics: true };\n    }\n    ;\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n        if (!query || !query.length)\n            return [];\n        const tokens = [];\n        const words = query.split(/\\s+/);\n        var field_regex;\n        if (weights) {\n            field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n        }\n        words.forEach((word) => {\n            let field_match;\n            let field = null;\n            let regex = null;\n            // look for \"field:query\" tokens\n            if (field_regex && (field_match = word.match(field_regex))) {\n                field = field_match[1];\n                word = field_match[2];\n            }\n            if (word.length > 0) {\n                if (this.settings.diacritics) {\n                    regex = getPattern(word) || null;\n                }\n                else {\n                    regex = escape_regex(word);\n                }\n                if (regex && respect_word_boundaries)\n                    regex = \"\\\\b\" + regex;\n            }\n            tokens.push({\n                string: word,\n                regex: regex ? new RegExp(regex, 'iu') : null,\n                field: field,\n            });\n        });\n        return tokens;\n    }\n    ;\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n    _getScoreFunction(search) {\n        const tokens = search.tokens, token_count = tokens.length;\n        if (!token_count) {\n            return function () { return 0; };\n        }\n        const fields = search.options.fields, weights = search.weights, field_count = fields.length, getAttrFn = search.getAttrFn;\n        if (!field_count) {\n            return function () { return 1; };\n        }\n        /**\n         * Calculates the score of an object\n         * against the search query.\n         *\n         */\n        const scoreObject = (function () {\n            if (field_count === 1) {\n                return function (token, data) {\n                    const field = fields[0].field;\n                    return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n                };\n            }\n            return function (token, data) {\n                var sum = 0;\n                // is the token specific to a field?\n                if (token.field) {\n                    const value = getAttrFn(data, token.field);\n                    if (!token.regex && value) {\n                        sum += (1 / field_count);\n                    }\n                    else {\n                        sum += scoreValue(value, token, 1);\n                    }\n                }\n                else {\n                    iterate(weights, (weight, field) => {\n                        sum += scoreValue(getAttrFn(data, field), token, weight);\n                    });\n                }\n                return sum / field_count;\n            };\n        })();\n        if (token_count === 1) {\n            return function (data) {\n                return scoreObject(tokens[0], data);\n            };\n        }\n        if (search.options.conjunction === 'and') {\n            return function (data) {\n                var score, sum = 0;\n                for (let token of tokens) {\n                    score = scoreObject(token, data);\n                    if (score <= 0)\n                        return 0;\n                    sum += score;\n                }\n                return sum / token_count;\n            };\n        }\n        else {\n            return function (data) {\n                var sum = 0;\n                iterate(tokens, (token) => {\n                    sum += scoreObject(token, data);\n                });\n                return sum / token_count;\n            };\n        }\n    }\n    ;\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n        var implicit_score, sort_flds = [];\n        const self = this, options = search.options, sort = (!search.query && options.sort_empty) ? options.sort_empty : options.sort;\n        if (typeof sort == 'function') {\n            return sort.bind(this);\n        }\n        /**\n         * Fetches the specified sort field value\n         * from a search result item.\n         *\n         */\n        const get_field = function (name, result) {\n            if (name === '$score')\n                return result.score;\n            return search.getAttrFn(self.items[result.id], name);\n        };\n        // parse options\n        if (sort) {\n            for (let s of sort) {\n                if (search.query || s.field !== '$score') {\n                    sort_flds.push(s);\n                }\n            }\n        }\n        // the \"$score\" field is implied to be the primary\n        // sort field, unless it's manually specified\n        if (search.query) {\n            implicit_score = true;\n            for (let fld of sort_flds) {\n                if (fld.field === '$score') {\n                    implicit_score = false;\n                    break;\n                }\n            }\n            if (implicit_score) {\n                sort_flds.unshift({ field: '$score', direction: 'desc' });\n            }\n            // without a search.query, all items will have the same score\n        }\n        else {\n            sort_flds = sort_flds.filter((fld) => fld.field !== '$score');\n        }\n        // build function\n        const sort_flds_count = sort_flds.length;\n        if (!sort_flds_count) {\n            return null;\n        }\n        return function (a, b) {\n            var result, field;\n            for (let sort_fld of sort_flds) {\n                field = sort_fld.field;\n                let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n                result = multiplier * cmp(get_field(field, a), get_field(field, b));\n                if (result)\n                    return result;\n            }\n            return 0;\n        };\n    }\n    ;\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n        const weights = {};\n        var options = Object.assign({}, optsUser);\n        propToArray(options, 'sort');\n        propToArray(options, 'sort_empty');\n        // convert fields to new format\n        if (options.fields) {\n            propToArray(options, 'fields');\n            const fields = [];\n            options.fields.forEach((field) => {\n                if (typeof field == 'string') {\n                    field = { field: field, weight: 1 };\n                }\n                fields.push(field);\n                weights[field.field] = ('weight' in field) ? field.weight : 1;\n            });\n            options.fields = fields;\n        }\n        return {\n            options: options,\n            query: query.toLowerCase().trim(),\n            tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n            total: 0,\n            items: [],\n            weights: weights,\n            getAttrFn: (options.nesting) ? getAttrNesting : getAttr,\n        };\n    }\n    ;\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n        var self = this, score, search;\n        search = this.prepareSearch(query, options);\n        options = search.options;\n        query = search.query;\n        // generate result scoring function\n        const fn_score = options.score || self._getScoreFunction(search);\n        // perform search and sort\n        if (query.length) {\n            iterate(self.items, (item, id) => {\n                score = fn_score(item);\n                if (options.filter === false || score > 0) {\n                    search.items.push({ 'score': score, 'id': id });\n                }\n            });\n        }\n        else {\n            iterate(self.items, (_, id) => {\n                search.items.push({ 'score': 1, 'id': id });\n            });\n        }\n        const fn_sort = self._getSortFunction(search);\n        if (fn_sort)\n            search.items.sort(fn_sort);\n        // apply limits\n        search.total = search.items.length;\n        if (typeof options.limit === 'number') {\n            search.items = search.items.slice(0, options.limit);\n        }\n        return search;\n    }\n    ;\n}\nexport { Sifter, scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp, getPattern };\nexport * from \"./types.js\";\n//# sourceMappingURL=sifter.js.map","/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value) => {\n    if (typeof value === 'undefined' || value === null)\n        return null;\n    return get_hash(value);\n};\nexport const get_hash = (value) => {\n    if (typeof value === 'boolean')\n        return value ? '1' : '0';\n    return value + '';\n};\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str) => {\n    return (str + '')\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;');\n};\n/**\n * use setTimeout if timeout > 0\n */\nexport const timeout = (fn, timeout) => {\n    if (timeout > 0) {\n        return window.setTimeout(fn, timeout);\n    }\n    fn.call(null);\n    return null;\n};\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn, delay) => {\n    var timeout;\n    return function (value, callback) {\n        var self = this;\n        if (timeout) {\n            self.loading = Math.max(self.loading - 1, 0);\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(function () {\n            timeout = null;\n            self.loadedSearches[value] = true;\n            fn.call(self, value, callback);\n        }, delay);\n    };\n};\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = (self, types, fn) => {\n    var type;\n    var trigger = self.trigger;\n    var event_args = {};\n    // override trigger method\n    self.trigger = function () {\n        var type = arguments[0];\n        if (types.indexOf(type) !== -1) {\n            event_args[type] = arguments;\n        }\n        else {\n            return trigger.apply(self, arguments);\n        }\n    };\n    // invoke provided function\n    fn.apply(self, []);\n    self.trigger = trigger;\n    // trigger queued events\n    for (type of types) {\n        if (type in event_args) {\n            trigger.apply(self, event_args[type]);\n        }\n    }\n};\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input) => {\n    return {\n        start: input.selectionStart || 0,\n        length: (input.selectionEnd || 0) - (input.selectionStart || 0),\n    };\n};\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt, stop = false) => {\n    if (evt) {\n        evt.preventDefault();\n        if (stop) {\n            evt.stopPropagation();\n        }\n    }\n};\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target, type, callback, options) => {\n    target.addEventListener(type, callback, options);\n};\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = (key_name, evt) => {\n    if (!evt) {\n        return false;\n    }\n    if (!evt[key_name]) {\n        return false;\n    }\n    var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n    if (count === 1) {\n        return true;\n    }\n    return false;\n};\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el, id) => {\n    const existing_id = el.getAttribute('id');\n    if (existing_id) {\n        return existing_id;\n    }\n    el.setAttribute('id', id);\n    return id;\n};\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str) => {\n    return str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n/**\n *\n */\nexport const append = (parent, node) => {\n    if (node)\n        parent.append(node);\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n        object.forEach(callback);\n    }\n    else {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                callback(object[key], key);\n            }\n        }\n    }\n};\n//# sourceMappingURL=utils.js.map","import { iterate } from \"./utils.js\";\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = (query) => {\n    if (query.jquery) {\n        return query[0];\n    }\n    if (query instanceof HTMLElement) {\n        return query;\n    }\n    if (isHtmlString(query)) {\n        var tpl = document.createElement('template');\n        tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n        return tpl.content.firstChild;\n    }\n    return document.querySelector(query);\n};\nexport const isHtmlString = (arg) => {\n    if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n        return true;\n    }\n    return false;\n};\nexport const escapeQuery = (query) => {\n    return query.replace(/['\"\\\\]/g, '\\\\$&');\n};\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = (dom_el, event_name) => {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(event_name, true, false);\n    dom_el.dispatchEvent(event);\n};\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = (dom_el, css) => {\n    Object.assign(dom_el.style, css);\n};\n/**\n * Add css classes\n *\n */\nexport const addClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n        norm_classes.map(cls => {\n            el.classList.add(cls);\n        });\n    });\n};\n/**\n * Remove css classes\n *\n */\nexport const removeClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n        norm_classes.map(cls => {\n            el.classList.remove(cls);\n        });\n    });\n};\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args) => {\n    var classes = [];\n    iterate(args, (_classes) => {\n        if (typeof _classes === 'string') {\n            _classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n        }\n        if (Array.isArray(_classes)) {\n            classes = classes.concat(_classes);\n        }\n    });\n    return classes.filter(Boolean);\n};\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg) => {\n    if (!Array.isArray(arg)) {\n        arg = [arg];\n    }\n    return arg;\n};\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = (target, selector, wrapper) => {\n    if (wrapper && !wrapper.contains(target)) {\n        return;\n    }\n    while (target && target.matches) {\n        if (target.matches(selector)) {\n            return target;\n        }\n        target = target.parentNode;\n    }\n};\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = (list, direction = 0) => {\n    if (direction > 0) {\n        return list[list.length - 1];\n    }\n    return list[0];\n};\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj) => {\n    return (Object.keys(obj).length === 0);\n};\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = (el, amongst) => {\n    if (!el)\n        return -1;\n    amongst = amongst || el.nodeName;\n    var i = 0;\n    while (el = el.previousElementSibling) {\n        if (el.matches(amongst)) {\n            i++;\n        }\n    }\n    return i;\n};\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el, attrs) => {\n    iterate(attrs, (val, attr) => {\n        if (val == null) {\n            el.removeAttribute(attr);\n        }\n        else {\n            el.setAttribute(attr, '' + val);\n        }\n    });\n};\n/**\n * Replace a node\n */\nexport const replaceNode = (existing, replacement) => {\n    if (existing.parentNode)\n        existing.parentNode.replaceChild(replacement, existing);\n};\n//# sourceMappingURL=vanilla.js.map","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\nimport { replaceNode } from \"../vanilla.js\";\nexport const highlight = (element, regex) => {\n    if (regex === null)\n        return;\n    // convet string to regex\n    if (typeof regex === 'string') {\n        if (!regex.length)\n            return;\n        regex = new RegExp(regex, 'i');\n    }\n    // Wrap matching part of text node with highlighting <span>, e.g.\n    // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n    const highlightText = (node) => {\n        var match = node.data.match(regex);\n        if (match && node.data.length > 0) {\n            var spannode = document.createElement('span');\n            spannode.className = 'highlight';\n            var middlebit = node.splitText(match.index);\n            middlebit.splitText(match[0].length);\n            var middleclone = middlebit.cloneNode(true);\n            spannode.appendChild(middleclone);\n            replaceNode(middlebit, spannode);\n            return 1;\n        }\n        return 0;\n    };\n    // Recurse element node, looking for child text nodes to highlight, unless element\n    // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n    const highlightChildren = (node) => {\n        if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n            Array.from(node.childNodes).forEach(element => {\n                highlightRecursive(element);\n            });\n        }\n    };\n    const highlightRecursive = (node) => {\n        if (node.nodeType === 3) {\n            return highlightText(node);\n        }\n        highlightChildren(node);\n        return 0;\n    };\n    highlightRecursive(element);\n};\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el) => {\n    var elements = el.querySelectorAll(\"span.highlight\");\n    Array.prototype.forEach.call(elements, function (el) {\n        var parent = el.parentNode;\n        parent.replaceChild(el.firstChild, el);\n        parent.normalize();\n    });\n};\n//# sourceMappingURL=highlight.js.map","export const KEY_A = 65;\nexport const KEY_RETURN = 13;\nexport const KEY_ESC = 27;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_BACKSPACE = 8;\nexport const KEY_DELETE = 46;\nexport const KEY_TAB = 9;\nexport const IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n//# sourceMappingURL=constants.js.map","export default {\n    options: [],\n    optgroups: [],\n    plugins: [],\n    delimiter: ',',\n    splitOn: null, // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: null,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    shouldOpen: null,\n    maxOptions: 50,\n    maxItems: null,\n    hideSelected: null,\n    duplicates: false,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: null,\n    allowEmptyOption: false,\n    //closeAfterSelect: false,\n    refreshThrottle: 300,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n    dataAttr: null, //'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    disabledField: 'disabled',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n    mode: null,\n    wrapperClass: 'ts-wrapper',\n    controlClass: 'ts-control',\n    dropdownClass: 'ts-dropdown',\n    dropdownContentClass: 'ts-dropdown-content',\n    itemClass: 'item',\n    optionClass: 'option',\n    dropdownParent: null,\n    controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n    copyClassesToDropdown: false,\n    placeholder: null,\n    hidePlaceholder: null,\n    shouldLoad: function (query) {\n        return query.length > 0;\n    },\n    /*\n    load                 : null, // function(query, callback) { ... }\n    score                : null, // function(search) { ... }\n    onInitialize         : null, // function() { ... }\n    onChange             : null, // function(value) { ... }\n    onItemAdd            : null, // function(value, $item) { ... }\n    onItemRemove         : null, // function(value) { ... }\n    onClear              : null, // function() { ... }\n    onOptionAdd          : null, // function(value, data) { ... }\n    onOptionRemove       : null, // function(value) { ... }\n    onOptionClear        : null, // function() { ... }\n    onOptionGroupAdd     : null, // function(id, data) { ... }\n    onOptionGroupRemove  : null, // function(id) { ... }\n    onOptionGroupClear   : null, // function() { ... }\n    onDropdownOpen       : null, // function(dropdown) { ... }\n    onDropdownClose      : null, // function(dropdown) { ... }\n    onType               : null, // function(str) { ... }\n    onDelete             : null, // function(values) { ... }\n    */\n    render: {\n    /*\n    item: null,\n    optgroup: null,\n    optgroup_header: null,\n    option: null,\n    option_create: null\n    */\n    }\n};\n//# sourceMappingURL=defaults.js.map","import defaults from \"./defaults.js\";\nimport { hash_key, iterate } from \"./utils.js\";\nexport default function getSettings(input, settings_user) {\n    var settings = Object.assign({}, defaults, settings_user);\n    var attr_data = settings.dataAttr;\n    var field_label = settings.labelField;\n    var field_value = settings.valueField;\n    var field_disabled = settings.disabledField;\n    var field_optgroup = settings.optgroupField;\n    var field_optgroup_label = settings.optgroupLabelField;\n    var field_optgroup_value = settings.optgroupValueField;\n    var tag_name = input.tagName.toLowerCase();\n    var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n    if (!placeholder && !settings.allowEmptyOption) {\n        let option = input.querySelector('option[value=\"\"]');\n        if (option) {\n            placeholder = option.textContent;\n        }\n    }\n    var settings_element = {\n        placeholder: placeholder,\n        options: [],\n        optgroups: [],\n        items: [],\n        maxItems: null,\n    };\n    /**\n     * Initialize from a <select> element.\n     *\n     */\n    var init_select = () => {\n        var tagName;\n        var options = settings_element.options;\n        var optionsMap = {};\n        var group_count = 1;\n        let $order = 0;\n        var readData = (el) => {\n            var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n            var json = attr_data && data[attr_data];\n            if (typeof json === 'string' && json.length) {\n                data = Object.assign(data, JSON.parse(json));\n            }\n            return data;\n        };\n        var addOption = (option, group) => {\n            var value = hash_key(option.value);\n            if (value == null)\n                return;\n            if (!value && !settings.allowEmptyOption)\n                return;\n            // if the option already exists, it's probably been\n            // duplicated in another optgroup. in this case, push\n            // the current group to the \"optgroup\" property on the\n            // existing option so that it's rendered in both places.\n            if (optionsMap.hasOwnProperty(value)) {\n                if (group) {\n                    var arr = optionsMap[value][field_optgroup];\n                    if (!arr) {\n                        optionsMap[value][field_optgroup] = group;\n                    }\n                    else if (!Array.isArray(arr)) {\n                        optionsMap[value][field_optgroup] = [arr, group];\n                    }\n                    else {\n                        arr.push(group);\n                    }\n                }\n            }\n            else {\n                var option_data = readData(option);\n                option_data[field_label] = option_data[field_label] || option.textContent;\n                option_data[field_value] = option_data[field_value] || value;\n                option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n                option_data[field_optgroup] = option_data[field_optgroup] || group;\n                option_data.$option = option;\n                option_data.$order = option_data.$order || ++$order;\n                optionsMap[value] = option_data;\n                options.push(option_data);\n            }\n            if (option.selected) {\n                settings_element.items.push(value);\n            }\n        };\n        var addGroup = (optgroup) => {\n            var id, optgroup_data;\n            optgroup_data = readData(optgroup);\n            optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n            optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n            optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n            optgroup_data.$order = optgroup_data.$order || ++$order;\n            settings_element.optgroups.push(optgroup_data);\n            id = optgroup_data[field_optgroup_value];\n            iterate(optgroup.children, (option) => {\n                addOption(option, id);\n            });\n        };\n        settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n        iterate(input.children, (child) => {\n            tagName = child.tagName.toLowerCase();\n            if (tagName === 'optgroup') {\n                addGroup(child);\n            }\n            else if (tagName === 'option') {\n                addOption(child);\n            }\n        });\n    };\n    /**\n     * Initialize from a <input type=\"text\"> element.\n     *\n     */\n    var init_textbox = () => {\n        const data_raw = input.getAttribute(attr_data);\n        if (!data_raw) {\n            var value = input.value.trim() || '';\n            if (!settings.allowEmptyOption && !value.length)\n                return;\n            const values = value.split(settings.delimiter);\n            iterate(values, (value) => {\n                const option = {};\n                option[field_label] = value;\n                option[field_value] = value;\n                settings_element.options.push(option);\n            });\n            settings_element.items = values;\n        }\n        else {\n            settings_element.options = JSON.parse(data_raw);\n            iterate(settings_element.options, (opt) => {\n                settings_element.items.push(opt[field_value]);\n            });\n        }\n    };\n    if (tag_name === 'select') {\n        init_select();\n    }\n    else {\n        init_textbox();\n    }\n    return Object.assign({}, defaults, settings_element, settings_user);\n}\n;\n//# sourceMappingURL=getSettings.js.map","import MicroEvent from \"./contrib/microevent.js\";\nimport MicroPlugin from \"./contrib/microplugin.js\";\nimport { Sifter } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { highlight, removeHighlight } from \"./contrib/highlight.js\";\nimport * as constants from \"./constants.js\";\nimport getSettings from \"./getSettings.js\";\nimport { hash_key, get_hash, escape_html, debounce_events, getSelection, preventDefault, addEvent, loadDebounce, timeout, isKeyDown, getId, addSlashes, append, iterate } from \"./utils.js\";\nimport { getDom, isHtmlString, escapeQuery, triggerEvent, applyCSS, addClasses, removeClasses, parentMatch, getTail, isEmptyObject, nodeIndex, setAttr, replaceNode } from \"./vanilla.js\";\nvar instance_i = 0;\nexport default class TomSelect extends MicroPlugin(MicroEvent) {\n    constructor(input_arg, user_settings) {\n        super();\n        this.order = 0;\n        this.isOpen = false;\n        this.isDisabled = false;\n        this.isReadOnly = false;\n        this.isInvalid = false; // @deprecated 1.8\n        this.isValid = true;\n        this.isLocked = false;\n        this.isFocused = false;\n        this.isInputHidden = false;\n        this.isSetup = false;\n        this.ignoreFocus = false;\n        this.ignoreHover = false;\n        this.hasOptions = false;\n        this.lastValue = '';\n        this.caretPos = 0;\n        this.loading = 0;\n        this.loadedSearches = {};\n        this.activeOption = null;\n        this.activeItems = [];\n        this.optgroups = {};\n        this.options = {};\n        this.userOptions = {};\n        this.items = [];\n        this.refreshTimeout = null;\n        instance_i++;\n        var dir;\n        var input = getDom(input_arg);\n        if (input.tomselect) {\n            throw new Error('Tom Select already initialized on this element');\n        }\n        input.tomselect = this;\n        // detect rtl environment\n        var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n        dir = computedStyle.getPropertyValue('direction');\n        // setup default state\n        const settings = getSettings(input, user_settings);\n        this.settings = settings;\n        this.input = input;\n        this.tabIndex = input.tabIndex || 0;\n        this.is_select_tag = input.tagName.toLowerCase() === 'select';\n        this.rtl = /rtl/i.test(dir);\n        this.inputId = getId(input, 'tomselect-' + instance_i);\n        this.isRequired = input.required;\n        // search system\n        this.sifter = new Sifter(this.options, { diacritics: settings.diacritics });\n        // option-dependent defaults\n        settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n        if (typeof settings.hideSelected !== 'boolean') {\n            settings.hideSelected = settings.mode === 'multi';\n        }\n        if (typeof settings.hidePlaceholder !== 'boolean') {\n            settings.hidePlaceholder = settings.mode !== 'multi';\n        }\n        // set up createFilter callback\n        var filter = settings.createFilter;\n        if (typeof filter !== 'function') {\n            if (typeof filter === 'string') {\n                filter = new RegExp(filter);\n            }\n            if (filter instanceof RegExp) {\n                settings.createFilter = (input) => filter.test(input);\n            }\n            else {\n                settings.createFilter = (value) => {\n                    return this.settings.duplicates || !this.options[value];\n                };\n            }\n        }\n        this.initializePlugins(settings.plugins);\n        this.setupCallbacks();\n        this.setupTemplates();\n        // Create all elements\n        const wrapper = getDom('<div>');\n        const control = getDom('<div>');\n        const dropdown = this._render('dropdown');\n        const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n        const classes = this.input.getAttribute('class') || '';\n        const inputMode = settings.mode;\n        var control_input;\n        addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n        addClasses(control, settings.controlClass);\n        append(wrapper, control);\n        addClasses(dropdown, settings.dropdownClass, inputMode);\n        if (settings.copyClassesToDropdown) {\n            addClasses(dropdown, classes);\n        }\n        addClasses(dropdown_content, settings.dropdownContentClass);\n        append(dropdown, dropdown_content);\n        getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n        // default controlInput\n        if (isHtmlString(settings.controlInput)) {\n            control_input = getDom(settings.controlInput);\n            // set attributes\n            var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n            iterate(attrs, (attr) => {\n                if (input.getAttribute(attr)) {\n                    setAttr(control_input, { [attr]: input.getAttribute(attr) });\n                }\n            });\n            control_input.tabIndex = -1;\n            control.appendChild(control_input);\n            this.focus_node = control_input;\n            // dom element\n        }\n        else if (settings.controlInput) {\n            control_input = getDom(settings.controlInput);\n            this.focus_node = control_input;\n        }\n        else {\n            control_input = getDom('<input/>');\n            this.focus_node = control;\n        }\n        this.wrapper = wrapper;\n        this.dropdown = dropdown;\n        this.dropdown_content = dropdown_content;\n        this.control = control;\n        this.control_input = control_input;\n        this.setup();\n    }\n    /**\n     * set up event bindings.\n     *\n     */\n    setup() {\n        const self = this;\n        const settings = self.settings;\n        const control_input = self.control_input;\n        const dropdown = self.dropdown;\n        const dropdown_content = self.dropdown_content;\n        const wrapper = self.wrapper;\n        const control = self.control;\n        const input = self.input;\n        const focus_node = self.focus_node;\n        const passive_event = { passive: true };\n        const listboxId = self.inputId + '-ts-dropdown';\n        setAttr(dropdown_content, {\n            id: listboxId\n        });\n        setAttr(focus_node, {\n            role: 'combobox',\n            'aria-haspopup': 'listbox',\n            'aria-expanded': 'false',\n            'aria-controls': listboxId\n        });\n        const control_id = getId(focus_node, self.inputId + '-ts-control');\n        const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n        const label = document.querySelector(query);\n        const label_click = self.focus.bind(self);\n        if (label) {\n            addEvent(label, 'click', label_click);\n            setAttr(label, { for: control_id });\n            const label_id = getId(label, self.inputId + '-ts-label');\n            setAttr(focus_node, { 'aria-labelledby': label_id });\n            setAttr(dropdown_content, { 'aria-labelledby': label_id });\n        }\n        wrapper.style.width = input.style.width;\n        if (self.plugins.names.length) {\n            const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n            addClasses([wrapper, dropdown], classes_plugins);\n        }\n        if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n            setAttr(input, { multiple: 'multiple' });\n        }\n        if (settings.placeholder) {\n            setAttr(control_input, { placeholder: settings.placeholder });\n        }\n        // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n        if (!settings.splitOn && settings.delimiter) {\n            settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n        }\n        // debounce user defined load() if loadThrottle > 0\n        // after initializePlugins() so plugins can create/modify user defined loaders\n        if (settings.load && settings.loadThrottle) {\n            settings.load = loadDebounce(settings.load, settings.loadThrottle);\n        }\n        addEvent(dropdown, 'mousemove', () => {\n            self.ignoreHover = false;\n        });\n        addEvent(dropdown, 'mouseenter', (e) => {\n            var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n            if (target_match)\n                self.onOptionHover(e, target_match);\n        }, { capture: true });\n        // clicking on an option should select it\n        addEvent(dropdown, 'click', (evt) => {\n            const option = parentMatch(evt.target, '[data-selectable]');\n            if (option) {\n                self.onOptionSelect(evt, option);\n                preventDefault(evt, true);\n            }\n        });\n        addEvent(control, 'click', (evt) => {\n            var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n            if (target_match && self.onItemSelect(evt, target_match)) {\n                preventDefault(evt, true);\n                return;\n            }\n            // retain focus (see control_input mousedown)\n            if (control_input.value != '') {\n                return;\n            }\n            self.onClick();\n            preventDefault(evt, true);\n        });\n        // keydown on focus_node for arrow_down/arrow_up\n        addEvent(focus_node, 'keydown', (e) => self.onKeyDown(e));\n        // keypress and input/keyup\n        addEvent(control_input, 'keypress', (e) => self.onKeyPress(e));\n        addEvent(control_input, 'input', (e) => self.onInput(e));\n        addEvent(focus_node, 'blur', (e) => self.onBlur(e));\n        addEvent(focus_node, 'focus', (e) => self.onFocus(e));\n        addEvent(control_input, 'paste', (e) => self.onPaste(e));\n        const doc_mousedown = (evt) => {\n            // blur if target is outside of this instance\n            // dropdown is not always inside wrapper\n            const target = evt.composedPath()[0];\n            if (!wrapper.contains(target) && !dropdown.contains(target)) {\n                if (self.isFocused) {\n                    self.blur();\n                }\n                self.inputState();\n                return;\n            }\n            // retain focus by preventing native handling. if the\n            // event target is the input it should not be modified.\n            // otherwise, text selection within the input won't work.\n            // Fixes bug #212 which is no covered by tests\n            if (target == control_input && self.isOpen) {\n                evt.stopPropagation();\n                // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n            }\n            else {\n                preventDefault(evt, true);\n            }\n        };\n        const win_scroll = () => {\n            if (self.isOpen) {\n                self.positionDropdown();\n            }\n        };\n        addEvent(document, 'mousedown', doc_mousedown);\n        addEvent(window, 'scroll', win_scroll, passive_event);\n        addEvent(window, 'resize', win_scroll, passive_event);\n        this._destroy = () => {\n            document.removeEventListener('mousedown', doc_mousedown);\n            window.removeEventListener('scroll', win_scroll);\n            window.removeEventListener('resize', win_scroll);\n            if (label)\n                label.removeEventListener('click', label_click);\n        };\n        // store original html and tab index so that they can be\n        // restored when the destroy() method is called.\n        this.revertSettings = {\n            innerHTML: input.innerHTML,\n            tabIndex: input.tabIndex\n        };\n        input.tabIndex = -1;\n        input.insertAdjacentElement('afterend', self.wrapper);\n        self.sync(false);\n        settings.items = [];\n        delete settings.optgroups;\n        delete settings.options;\n        addEvent(input, 'invalid', () => {\n            if (self.isValid) {\n                self.isValid = false;\n                self.isInvalid = true;\n                self.refreshState();\n            }\n        });\n        self.updateOriginalInput();\n        self.refreshItems();\n        self.close(false);\n        self.inputState();\n        self.isSetup = true;\n        if (input.disabled) {\n            self.disable();\n        }\n        else if (input.readOnly) {\n            self.setReadOnly(true);\n        }\n        else {\n            self.enable(); //sets tabIndex\n        }\n        self.on('change', this.onChange);\n        addClasses(input, 'tomselected', 'ts-hidden-accessible');\n        self.trigger('initialize');\n        // preload options\n        if (settings.preload === true) {\n            self.preload();\n        }\n    }\n    /**\n     * Register options and optgroups\n     *\n     */\n    setupOptions(options = [], optgroups = []) {\n        // build options table\n        this.addOptions(options);\n        // build optgroup table\n        iterate(optgroups, (optgroup) => {\n            this.registerOptionGroup(optgroup);\n        });\n    }\n    /**\n     * Sets up default rendering functions.\n     */\n    setupTemplates() {\n        var self = this;\n        var field_label = self.settings.labelField;\n        var field_optgroup = self.settings.optgroupLabelField;\n        var templates = {\n            'optgroup': (data) => {\n                let optgroup = document.createElement('div');\n                optgroup.className = 'optgroup';\n                optgroup.appendChild(data.options);\n                return optgroup;\n            },\n            'optgroup_header': (data, escape) => {\n                return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n            },\n            'option': (data, escape) => {\n                return '<div>' + escape(data[field_label]) + '</div>';\n            },\n            'item': (data, escape) => {\n                return '<div>' + escape(data[field_label]) + '</div>';\n            },\n            'option_create': (data, escape) => {\n                return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n            },\n            'no_results': () => {\n                return '<div class=\"no-results\">No results found</div>';\n            },\n            'loading': () => {\n                return '<div class=\"spinner\"></div>';\n            },\n            'not_loading': () => { },\n            'dropdown': () => {\n                return '<div></div>';\n            }\n        };\n        self.settings.render = Object.assign({}, templates, self.settings.render);\n    }\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n    setupCallbacks() {\n        var key, fn;\n        var callbacks = {\n            'initialize': 'onInitialize',\n            'change': 'onChange',\n            'item_add': 'onItemAdd',\n            'item_remove': 'onItemRemove',\n            'item_select': 'onItemSelect',\n            'clear': 'onClear',\n            'option_add': 'onOptionAdd',\n            'option_remove': 'onOptionRemove',\n            'option_clear': 'onOptionClear',\n            'optgroup_add': 'onOptionGroupAdd',\n            'optgroup_remove': 'onOptionGroupRemove',\n            'optgroup_clear': 'onOptionGroupClear',\n            'dropdown_open': 'onDropdownOpen',\n            'dropdown_close': 'onDropdownClose',\n            'type': 'onType',\n            'load': 'onLoad',\n            'focus': 'onFocus',\n            'blur': 'onBlur'\n        };\n        for (key in callbacks) {\n            fn = this.settings[callbacks[key]];\n            if (fn)\n                this.on(key, fn);\n        }\n    }\n    /**\n     * Sync the Tom Select instance with the original input or select\n     *\n     */\n    sync(get_settings = true) {\n        const self = this;\n        const settings = get_settings ? getSettings(self.input, { delimiter: self.settings.delimiter }) : self.settings;\n        self.setupOptions(settings.options, settings.optgroups);\n        self.setValue(settings.items || [], true); // silent prevents recursion\n        self.lastQuery = null; // so updated options will be displayed in dropdown\n    }\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     */\n    onClick() {\n        var self = this;\n        if (self.activeItems.length > 0) {\n            self.clearActiveItems();\n            self.focus();\n            return;\n        }\n        if (self.isFocused && self.isOpen) {\n            self.blur();\n        }\n        else {\n            self.focus();\n        }\n    }\n    /**\n     * @deprecated v1.7\n     *\n     */\n    onMouseDown() { }\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n    onChange() {\n        triggerEvent(this.input, 'input');\n        triggerEvent(this.input, 'change');\n    }\n    /**\n     * Triggered on <input> paste.\n     *\n     */\n    onPaste(e) {\n        var self = this;\n        if (self.isInputHidden || self.isLocked) {\n            preventDefault(e);\n            return;\n        }\n        // If a regex or string is included, this will split the pasted\n        // input and create Items for each separate value\n        if (!self.settings.splitOn) {\n            return;\n        }\n        // Wait for pasted text to be recognized in value\n        setTimeout(() => {\n            var pastedText = self.inputValue();\n            if (!pastedText.match(self.settings.splitOn)) {\n                return;\n            }\n            var splitInput = pastedText.trim().split(self.settings.splitOn);\n            iterate(splitInput, (piece) => {\n                const hash = hash_key(piece);\n                if (hash) {\n                    if (this.options[piece]) {\n                        self.addItem(piece);\n                    }\n                    else {\n                        self.createItem(piece);\n                    }\n                }\n            });\n        }, 0);\n    }\n    /**\n     * Triggered on <input> keypress.\n     *\n     */\n    onKeyPress(e) {\n        var self = this;\n        if (self.isLocked) {\n            preventDefault(e);\n            return;\n        }\n        var character = String.fromCharCode(e.keyCode || e.which);\n        if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n            self.createItem();\n            preventDefault(e);\n            return;\n        }\n    }\n    /**\n     * Triggered on <input> keydown.\n     *\n     */\n    onKeyDown(e) {\n        var self = this;\n        self.ignoreHover = true;\n        if (self.isLocked) {\n            if (e.keyCode !== constants.KEY_TAB) {\n                preventDefault(e);\n            }\n            return;\n        }\n        switch (e.keyCode) {\n            // ctrl+A: select all\n            case constants.KEY_A:\n                if (isKeyDown(constants.KEY_SHORTCUT, e)) {\n                    if (self.control_input.value == '') {\n                        preventDefault(e);\n                        self.selectAll();\n                        return;\n                    }\n                }\n                break;\n            // esc: close dropdown\n            case constants.KEY_ESC:\n                if (self.isOpen) {\n                    preventDefault(e, true);\n                    self.close();\n                }\n                self.clearActiveItems();\n                return;\n            // down: open dropdown or move selection down\n            case constants.KEY_DOWN:\n                if (!self.isOpen && self.hasOptions) {\n                    self.open();\n                }\n                else if (self.activeOption) {\n                    let next = self.getAdjacent(self.activeOption, 1);\n                    if (next)\n                        self.setActiveOption(next);\n                }\n                preventDefault(e);\n                return;\n            // up: move selection up\n            case constants.KEY_UP:\n                if (self.activeOption) {\n                    let prev = self.getAdjacent(self.activeOption, -1);\n                    if (prev)\n                        self.setActiveOption(prev);\n                }\n                preventDefault(e);\n                return;\n            // return: select active option\n            case constants.KEY_RETURN:\n                if (self.canSelect(self.activeOption)) {\n                    self.onOptionSelect(e, self.activeOption);\n                    preventDefault(e);\n                    // if the option_create=null, the dropdown might be closed\n                }\n                else if (self.settings.create && self.createItem()) {\n                    preventDefault(e);\n                    // don't submit form when searching for a value\n                }\n                else if (document.activeElement == self.control_input && self.isOpen) {\n                    preventDefault(e);\n                }\n                return;\n            // left: modifiy item selection to the left\n            case constants.KEY_LEFT:\n                self.advanceSelection(-1, e);\n                return;\n            // right: modifiy item selection to the right\n            case constants.KEY_RIGHT:\n                self.advanceSelection(1, e);\n                return;\n            // tab: select active option and/or create item\n            case constants.KEY_TAB:\n                if (self.settings.selectOnTab) {\n                    if (self.canSelect(self.activeOption)) {\n                        self.onOptionSelect(e, self.activeOption);\n                        // prevent default [tab] behaviour of jump to the next field\n                        // if select isFull, then the dropdown won't be open and [tab] will work normally\n                        preventDefault(e);\n                    }\n                    if (self.settings.create && self.createItem()) {\n                        preventDefault(e);\n                    }\n                }\n                return;\n            // delete|backspace: delete items\n            case constants.KEY_BACKSPACE:\n            case constants.KEY_DELETE:\n                self.deleteSelection(e);\n                return;\n        }\n        // don't enter text in the control_input when active items are selected\n        if (self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT, e)) {\n            preventDefault(e);\n        }\n    }\n    /**\n     * Triggered on <input> keyup.\n     *\n     */\n    onInput(e) {\n        if (this.isLocked) {\n            return;\n        }\n        const value = this.inputValue();\n        if (this.lastValue === value)\n            return;\n        this.lastValue = value;\n        if (value == '') {\n            this._onInput();\n            return;\n        }\n        if (this.refreshTimeout) {\n            window.clearTimeout(this.refreshTimeout);\n        }\n        this.refreshTimeout = timeout(() => {\n            this.refreshTimeout = null;\n            this._onInput();\n        }, this.settings.refreshThrottle);\n    }\n    _onInput() {\n        const value = this.lastValue;\n        if (this.settings.shouldLoad.call(this, value)) {\n            this.load(value);\n        }\n        this.refreshOptions();\n        this.trigger('type', value);\n    }\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     */\n    onOptionHover(evt, option) {\n        if (this.ignoreHover)\n            return;\n        this.setActiveOption(option, false);\n    }\n    /**\n     * Triggered on <input> focus.\n     *\n     */\n    onFocus(e) {\n        var self = this;\n        var wasFocused = self.isFocused;\n        if (self.isDisabled || self.isReadOnly) {\n            self.blur();\n            preventDefault(e);\n            return;\n        }\n        if (self.ignoreFocus)\n            return;\n        self.isFocused = true;\n        if (self.settings.preload === 'focus')\n            self.preload();\n        if (!wasFocused)\n            self.trigger('focus');\n        if (!self.activeItems.length) {\n            self.inputState();\n            self.refreshOptions(!!self.settings.openOnFocus);\n        }\n        self.refreshState();\n    }\n    /**\n     * Triggered on <input> blur.\n     *\n     */\n    onBlur(e) {\n        if (document.hasFocus() === false)\n            return;\n        var self = this;\n        if (!self.isFocused)\n            return;\n        self.isFocused = false;\n        self.ignoreFocus = false;\n        var deactivate = () => {\n            self.close();\n            self.setActiveItem();\n            self.setCaret(self.items.length);\n            self.trigger('blur');\n        };\n        if (self.settings.create && self.settings.createOnBlur) {\n            self.createItem(null, deactivate);\n        }\n        else {\n            deactivate();\n        }\n    }\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     */\n    onOptionSelect(evt, option) {\n        var value, self = this;\n        // should not be possible to trigger a option under a disabled optgroup\n        if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n            return;\n        }\n        if (option.classList.contains('create')) {\n            self.createItem(null, () => {\n                if (self.settings.closeAfterSelect) {\n                    self.close();\n                }\n            });\n        }\n        else {\n            value = option.dataset.value;\n            if (typeof value !== 'undefined') {\n                self.lastQuery = null;\n                self.addItem(value);\n                if (self.settings.closeAfterSelect) {\n                    self.close();\n                }\n                if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n                    self.setActiveOption(option);\n                }\n            }\n        }\n    }\n    /**\n     * Return true if the given option can be selected\n     *\n     */\n    canSelect(option) {\n        if (this.isOpen && option && this.dropdown_content.contains(option)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     */\n    onItemSelect(evt, item) {\n        var self = this;\n        if (!self.isLocked && self.settings.mode === 'multi') {\n            preventDefault(evt);\n            self.setActiveItem(item, evt);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Determines whether or not to invoke\n     * the user-provided option provider / loader\n     *\n     * Note, there is a subtle difference between\n     * this.canLoad() and this.settings.shouldLoad();\n     *\n     *\t- settings.shouldLoad() is a user-input validator.\n     *\tWhen false is returned, the not_loading template\n     *\twill be added to the dropdown\n     *\n     *\t- canLoad() is lower level validator that checks\n     * \tthe Tom Select instance. There is no inherent user\n     *\tfeedback when canLoad returns false\n     *\n     */\n    canLoad(value) {\n        if (!this.settings.load)\n            return false;\n        if (this.loadedSearches.hasOwnProperty(value))\n            return false;\n        return true;\n    }\n    /**\n     * Invokes the user-provided option provider / loader.\n     *\n     */\n    load(value) {\n        const self = this;\n        if (!self.canLoad(value))\n            return;\n        addClasses(self.wrapper, self.settings.loadingClass);\n        self.loading++;\n        const callback = self.loadCallback.bind(self);\n        self.settings.load.call(self, value, callback);\n    }\n    /**\n     * Invoked by the user-provided option provider\n     *\n     */\n    loadCallback(options, optgroups) {\n        const self = this;\n        self.loading = Math.max(self.loading - 1, 0);\n        self.lastQuery = null;\n        self.clearActiveOption(); // when new results load, focus should be on first option\n        self.setupOptions(options, optgroups);\n        self.refreshOptions(self.isFocused && !self.isInputHidden);\n        if (!self.loading) {\n            removeClasses(self.wrapper, self.settings.loadingClass);\n        }\n        self.trigger('load', options, optgroups);\n    }\n    preload() {\n        var classList = this.wrapper.classList;\n        if (classList.contains('preloaded'))\n            return;\n        classList.add('preloaded');\n        this.load('');\n    }\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     */\n    setTextboxValue(value = '') {\n        var input = this.control_input;\n        var changed = input.value !== value;\n        if (changed) {\n            input.value = value;\n            triggerEvent(input, 'update');\n            this.lastValue = value;\n        }\n    }\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     */\n    getValue() {\n        if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n            return this.items;\n        }\n        return this.items.join(this.settings.delimiter);\n    }\n    /**\n     * Resets the selected items to the given value.\n     *\n     */\n    setValue(value, silent) {\n        var events = silent ? [] : ['change'];\n        debounce_events(this, events, () => {\n            this.clear(silent);\n            this.addItems(value, silent);\n        });\n    }\n    /**\n     * Resets the number of max items to the given value\n     *\n     */\n    setMaxItems(value) {\n        if (value === 0)\n            value = null; //reset to unlimited items.\n        this.settings.maxItems = value;\n        this.refreshState();\n    }\n    /**\n     * Sets the selected item.\n     *\n     */\n    setActiveItem(item, e) {\n        var self = this;\n        var eventName;\n        var i, begin, end, swap;\n        var last;\n        if (self.settings.mode === 'single')\n            return;\n        // clear the active selection\n        if (!item) {\n            self.clearActiveItems();\n            if (self.isFocused) {\n                self.inputState();\n            }\n            return;\n        }\n        // modify selection\n        eventName = e && e.type.toLowerCase();\n        if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n            last = self.getLastActive();\n            begin = Array.prototype.indexOf.call(self.control.children, last);\n            end = Array.prototype.indexOf.call(self.control.children, item);\n            if (begin > end) {\n                swap = begin;\n                begin = end;\n                end = swap;\n            }\n            for (i = begin; i <= end; i++) {\n                item = self.control.children[i];\n                if (self.activeItems.indexOf(item) === -1) {\n                    self.setActiveItemClass(item);\n                }\n            }\n            preventDefault(e);\n        }\n        else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT, e)) || (eventName === 'keydown' && isKeyDown('shiftKey', e))) {\n            if (item.classList.contains('active')) {\n                self.removeActiveItem(item);\n            }\n            else {\n                self.setActiveItemClass(item);\n            }\n        }\n        else {\n            self.clearActiveItems();\n            self.setActiveItemClass(item);\n        }\n        // ensure control has focus\n        self.inputState();\n        if (!self.isFocused) {\n            self.focus();\n        }\n    }\n    /**\n     * Set the active and last-active classes\n     *\n     */\n    setActiveItemClass(item) {\n        const self = this;\n        const last_active = self.control.querySelector('.last-active');\n        if (last_active)\n            removeClasses(last_active, 'last-active');\n        addClasses(item, 'active last-active');\n        self.trigger('item_select', item);\n        if (self.activeItems.indexOf(item) == -1) {\n            self.activeItems.push(item);\n        }\n    }\n    /**\n     * Remove active item\n     *\n     */\n    removeActiveItem(item) {\n        var idx = this.activeItems.indexOf(item);\n        this.activeItems.splice(idx, 1);\n        removeClasses(item, 'active');\n    }\n    /**\n     * Clears all the active items\n     *\n     */\n    clearActiveItems() {\n        removeClasses(this.activeItems, 'active');\n        this.activeItems = [];\n    }\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     */\n    setActiveOption(option, scroll = true) {\n        if (option === this.activeOption) {\n            return;\n        }\n        this.clearActiveOption();\n        if (!option)\n            return;\n        this.activeOption = option;\n        setAttr(this.focus_node, { 'aria-activedescendant': option.getAttribute('id') });\n        setAttr(option, { 'aria-selected': 'true' });\n        addClasses(option, 'active');\n        if (scroll)\n            this.scrollToOption(option);\n    }\n    /**\n     * Sets the dropdown_content scrollTop to display the option\n     *\n     */\n    scrollToOption(option, behavior) {\n        if (!option)\n            return;\n        const content = this.dropdown_content;\n        const height_menu = content.clientHeight;\n        const scrollTop = content.scrollTop || 0;\n        const height_item = option.offsetHeight;\n        const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n        if (y + height_item > height_menu + scrollTop) {\n            this.scroll(y - height_menu + height_item, behavior);\n        }\n        else if (y < scrollTop) {\n            this.scroll(y, behavior);\n        }\n    }\n    /**\n     * Scroll the dropdown to the given position\n     *\n     */\n    scroll(scrollTop, behavior) {\n        const content = this.dropdown_content;\n        if (behavior) {\n            content.style.scrollBehavior = behavior;\n        }\n        content.scrollTop = scrollTop;\n        content.style.scrollBehavior = '';\n    }\n    /**\n     * Clears the active option\n     *\n     */\n    clearActiveOption() {\n        if (this.activeOption) {\n            removeClasses(this.activeOption, 'active');\n            setAttr(this.activeOption, { 'aria-selected': null });\n        }\n        this.activeOption = null;\n        setAttr(this.focus_node, { 'aria-activedescendant': null });\n    }\n    /**\n     * Selects all items (CTRL + A).\n     */\n    selectAll() {\n        const self = this;\n        if (self.settings.mode === 'single')\n            return;\n        const activeItems = self.controlChildren();\n        if (!activeItems.length)\n            return;\n        self.inputState();\n        self.close();\n        self.activeItems = activeItems;\n        iterate(activeItems, (item) => {\n            self.setActiveItemClass(item);\n        });\n    }\n    /**\n     * Determines if the control_input should be in a hidden or visible state\n     *\n     */\n    inputState() {\n        var self = this;\n        if (!self.control.contains(self.control_input))\n            return;\n        setAttr(self.control_input, { placeholder: self.settings.placeholder });\n        if (self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0)) {\n            self.setTextboxValue();\n            self.isInputHidden = true;\n        }\n        else {\n            if (self.settings.hidePlaceholder && self.items.length > 0) {\n                setAttr(self.control_input, { placeholder: '' });\n            }\n            self.isInputHidden = false;\n        }\n        self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n    }\n    /**\n     * Get the input value\n     */\n    inputValue() {\n        return this.control_input.value.trim();\n    }\n    /**\n     * Gives the control focus.\n     */\n    focus() {\n        var self = this;\n        if (self.isDisabled || self.isReadOnly)\n            return;\n        self.ignoreFocus = true;\n        if (self.control_input.offsetWidth) {\n            self.control_input.focus();\n        }\n        else {\n            self.focus_node.focus();\n        }\n        setTimeout(() => {\n            self.ignoreFocus = false;\n            self.onFocus();\n        }, 0);\n    }\n    /**\n     * Forces the control out of focus.\n     *\n     */\n    blur() {\n        this.focus_node.blur();\n        this.onBlur();\n    }\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @return {function}\n     */\n    getScoreFunction(query) {\n        return this.sifter.getScoreFunction(query, this.getSearchOptions());\n    }\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/orchidjs/sifter.js\n     * @return {object}\n     */\n    getSearchOptions() {\n        var settings = this.settings;\n        var sort = settings.sortField;\n        if (typeof settings.sortField === 'string') {\n            sort = [{ field: settings.sortField }];\n        }\n        return {\n            fields: settings.searchField,\n            conjunction: settings.searchConjunction,\n            sort: sort,\n            nesting: settings.nesting\n        };\n    }\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     */\n    search(query) {\n        var result, calculateScore;\n        var self = this;\n        var options = this.getSearchOptions();\n        // validate user-provided result scoring function\n        if (self.settings.score) {\n            calculateScore = self.settings.score.call(self, query);\n            if (typeof calculateScore !== 'function') {\n                throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n            }\n        }\n        // perform search\n        if (query !== self.lastQuery) {\n            self.lastQuery = query;\n            result = self.sifter.search(query, Object.assign(options, { score: calculateScore }));\n            self.currentResults = result;\n        }\n        else {\n            result = Object.assign({}, self.currentResults);\n        }\n        // filter out selected items\n        if (self.settings.hideSelected) {\n            result.items = result.items.filter((item) => {\n                let hashed = hash_key(item.id);\n                return !(hashed && self.items.indexOf(hashed) !== -1);\n            });\n        }\n        return result;\n    }\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     */\n    refreshOptions(triggerDropdown = true) {\n        var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n        var create;\n        const groups = {};\n        const groups_order = [];\n        var self = this;\n        var query = self.inputValue();\n        const same_query = query === self.lastQuery || (query == '' && self.lastQuery == null);\n        var results = self.search(query);\n        var active_option = null;\n        var show_dropdown = self.settings.shouldOpen || false;\n        var dropdown_content = self.dropdown_content;\n        if (same_query) {\n            active_option = self.activeOption;\n            if (active_option) {\n                active_group = active_option.closest('[data-group]');\n            }\n        }\n        // build markup\n        n = results.items.length;\n        if (typeof self.settings.maxOptions === 'number') {\n            n = Math.min(n, self.settings.maxOptions);\n        }\n        if (n > 0) {\n            show_dropdown = true;\n        }\n        // get fragment for group and the position of the group in group_order\n        const getGroupFragment = (optgroup, order) => {\n            let group_order_i = groups[optgroup];\n            if (group_order_i !== undefined) {\n                let order_group = groups_order[group_order_i];\n                if (order_group !== undefined) {\n                    return [group_order_i, order_group.fragment];\n                }\n            }\n            let group_fragment = document.createDocumentFragment();\n            group_order_i = groups_order.length;\n            groups_order.push({ fragment: group_fragment, order, optgroup });\n            return [group_order_i, group_fragment];\n        };\n        // render and group available options individually\n        for (i = 0; i < n; i++) {\n            // get option dom element\n            let item = results.items[i];\n            if (!item)\n                continue;\n            let opt_value = item.id;\n            let option = self.options[opt_value];\n            if (option === undefined)\n                continue;\n            let opt_hash = get_hash(opt_value);\n            let option_el = self.getOption(opt_hash, true);\n            // toggle 'selected' class\n            if (!self.settings.hideSelected) {\n                option_el.classList.toggle('selected', self.items.includes(opt_hash));\n            }\n            optgroup = option[self.settings.optgroupField] || '';\n            optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n            for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n                optgroup = optgroups[j];\n                let order = option.$order;\n                let self_optgroup = self.optgroups[optgroup];\n                if (self_optgroup === undefined) {\n                    optgroup = '';\n                }\n                else {\n                    order = self_optgroup.$order;\n                }\n                const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n                // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n                if (j > 0) {\n                    option_el = option_el.cloneNode(true);\n                    setAttr(option_el, { id: option.$id + '-clone-' + j, 'aria-selected': null });\n                    option_el.classList.add('ts-cloned');\n                    removeClasses(option_el, 'active');\n                    // make sure we keep the activeOption in the same group\n                    if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n                        if (active_group && active_group.dataset.group === optgroup.toString()) {\n                            active_option = option_el;\n                        }\n                    }\n                }\n                group_fragment.appendChild(option_el);\n                if (optgroup != '') {\n                    groups[optgroup] = group_order_i;\n                }\n            }\n        }\n        // sort optgroups\n        if (self.settings.lockOptgroupOrder) {\n            groups_order.sort((a, b) => {\n                return a.order - b.order;\n            });\n        }\n        // render optgroup headers & join groups\n        html = document.createDocumentFragment();\n        iterate(groups_order, (group_order) => {\n            let group_fragment = group_order.fragment;\n            let optgroup = group_order.optgroup;\n            if (!group_fragment || !group_fragment.children.length)\n                return;\n            let group_heading = self.optgroups[optgroup];\n            if (group_heading !== undefined) {\n                let group_options = document.createDocumentFragment();\n                let header = self.render('optgroup_header', group_heading);\n                append(group_options, header);\n                append(group_options, group_fragment);\n                let group_html = self.render('optgroup', { group: group_heading, options: group_options });\n                append(html, group_html);\n            }\n            else {\n                append(html, group_fragment);\n            }\n        });\n        dropdown_content.innerHTML = '';\n        append(dropdown_content, html);\n        // highlight matching terms inline\n        if (self.settings.highlight) {\n            removeHighlight(dropdown_content);\n            if (results.query.length && results.tokens.length) {\n                iterate(results.tokens, (tok) => {\n                    highlight(dropdown_content, tok.regex);\n                });\n            }\n        }\n        // helper method for adding templates to dropdown\n        var add_template = (template) => {\n            let content = self.render(template, { input: query });\n            if (content) {\n                show_dropdown = true;\n                dropdown_content.insertBefore(content, dropdown_content.firstChild);\n            }\n            return content;\n        };\n        // add loading message\n        if (self.loading) {\n            add_template('loading');\n            // invalid query\n        }\n        else if (!self.settings.shouldLoad.call(self, query)) {\n            add_template('not_loading');\n            // add no_results message\n        }\n        else if (results.items.length === 0) {\n            add_template('no_results');\n        }\n        // add create option\n        has_create_option = self.canCreate(query);\n        if (has_create_option) {\n            create = add_template('option_create');\n        }\n        // activate\n        self.hasOptions = results.items.length > 0 || has_create_option;\n        if (show_dropdown) {\n            if (results.items.length > 0) {\n                if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n                    active_option = self.getOption(self.items[0]);\n                }\n                if (!dropdown_content.contains(active_option)) {\n                    let active_index = 0;\n                    if (create && !self.settings.addPrecedence) {\n                        active_index = 1;\n                    }\n                    active_option = self.selectable()[active_index];\n                }\n            }\n            else if (create) {\n                active_option = create;\n            }\n            if (triggerDropdown && !self.isOpen) {\n                self.open();\n                self.scrollToOption(active_option, 'auto');\n            }\n            self.setActiveOption(active_option);\n        }\n        else {\n            self.clearActiveOption();\n            if (triggerDropdown && self.isOpen) {\n                self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n            }\n        }\n    }\n    /**\n     * Return list of selectable options\n     *\n     */\n    selectable() {\n        return this.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     */\n    addOption(data, user_created = false) {\n        const self = this;\n        // @deprecated 1.7.7\n        // use addOptions( array, user_created ) for adding multiple options\n        if (Array.isArray(data)) {\n            self.addOptions(data, user_created);\n            return false;\n        }\n        const key = hash_key(data[self.settings.valueField]);\n        if (key === null || self.options.hasOwnProperty(key)) {\n            return false;\n        }\n        data.$order = data.$order || ++self.order;\n        data.$id = self.inputId + '-opt-' + data.$order;\n        self.options[key] = data;\n        self.lastQuery = null;\n        if (user_created) {\n            self.userOptions[key] = user_created;\n            self.trigger('option_add', key, data);\n        }\n        return key;\n    }\n    /**\n     * Add multiple options\n     *\n     */\n    addOptions(data, user_created = false) {\n        iterate(data, (dat) => {\n            this.addOption(dat, user_created);\n        });\n    }\n    /**\n     * @deprecated 1.7.7\n     */\n    registerOption(data) {\n        return this.addOption(data);\n    }\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @return {boolean|string}\n     */\n    registerOptionGroup(data) {\n        var key = hash_key(data[this.settings.optgroupValueField]);\n        if (key === null)\n            return false;\n        data.$order = data.$order || ++this.order;\n        this.optgroups[key] = data;\n        return key;\n    }\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     */\n    addOptionGroup(id, data) {\n        var hashed_id;\n        data[this.settings.optgroupValueField] = id;\n        if (hashed_id = this.registerOptionGroup(data)) {\n            this.trigger('optgroup_add', hashed_id, data);\n        }\n    }\n    /**\n     * Removes an existing option group.\n     *\n     */\n    removeOptionGroup(id) {\n        if (this.optgroups.hasOwnProperty(id)) {\n            delete this.optgroups[id];\n            this.clearCache();\n            this.trigger('optgroup_remove', id);\n        }\n    }\n    /**\n     * Clears all existing option groups.\n     */\n    clearOptionGroups() {\n        this.optgroups = {};\n        this.clearCache();\n        this.trigger('optgroup_clear');\n    }\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     */\n    updateOption(value, data) {\n        const self = this;\n        var item_new;\n        var index_item;\n        const value_old = hash_key(value);\n        const value_new = hash_key(data[self.settings.valueField]);\n        // sanity checks\n        if (value_old === null)\n            return;\n        const data_old = self.options[value_old];\n        if (data_old == undefined)\n            return;\n        if (typeof value_new !== 'string')\n            throw new Error('Value must be set in option data');\n        const option = self.getOption(value_old);\n        const item = self.getItem(value_old);\n        data.$order = data.$order || data_old.$order;\n        delete self.options[value_old];\n        // invalidate render cache\n        // don't remove existing node yet, we'll remove it after replacing it\n        self.uncacheValue(value_new);\n        self.options[value_new] = data;\n        // update the option if it's in the dropdown\n        if (option) {\n            if (self.dropdown_content.contains(option)) {\n                const option_new = self._render('option', data);\n                replaceNode(option, option_new);\n                if (self.activeOption === option) {\n                    self.setActiveOption(option_new);\n                }\n            }\n            option.remove();\n        }\n        // update the item if we have one\n        if (item) {\n            index_item = self.items.indexOf(value_old);\n            if (index_item !== -1) {\n                self.items.splice(index_item, 1, value_new);\n            }\n            item_new = self._render('item', data);\n            if (item.classList.contains('active'))\n                addClasses(item_new, 'active');\n            replaceNode(item, item_new);\n        }\n        // invalidate last query because we might have updated the sortField\n        self.lastQuery = null;\n    }\n    /**\n     * Removes a single option.\n     *\n     */\n    removeOption(value, silent) {\n        const self = this;\n        value = get_hash(value);\n        self.uncacheValue(value);\n        delete self.userOptions[value];\n        delete self.options[value];\n        self.lastQuery = null;\n        self.trigger('option_remove', value);\n        self.removeItem(value, silent);\n    }\n    /**\n     * Clears all options.\n     */\n    clearOptions(filter) {\n        const boundFilter = (filter || this.clearFilter).bind(this);\n        this.loadedSearches = {};\n        this.userOptions = {};\n        this.clearCache();\n        const selected = {};\n        iterate(this.options, (option, key) => {\n            if (boundFilter(option, key)) {\n                selected[key] = option;\n            }\n        });\n        this.options = this.sifter.items = selected;\n        this.lastQuery = null;\n        this.trigger('option_clear');\n    }\n    /**\n     * Used by clearOptions() to decide whether or not an option should be removed\n     * Return true to keep an option, false to remove\n     *\n     */\n    clearFilter(option, value) {\n        if (this.items.indexOf(value) >= 0) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Returns the dom element of the option\n     * matching the given value.\n     *\n     */\n    getOption(value, create = false) {\n        const hashed = hash_key(value);\n        if (hashed === null)\n            return null;\n        const option = this.options[hashed];\n        if (option != undefined) {\n            if (option.$div) {\n                return option.$div;\n            }\n            if (create) {\n                return this._render('option', option);\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the dom element of the next or previous dom element of the same type\n     * Note: adjacent options may not be adjacent DOM elements (optgroups)\n     *\n     */\n    getAdjacent(option, direction, type = 'option') {\n        var self = this, all;\n        if (!option) {\n            return null;\n        }\n        if (type == 'item') {\n            all = self.controlChildren();\n        }\n        else {\n            all = self.dropdown_content.querySelectorAll('[data-selectable]');\n        }\n        for (let i = 0; i < all.length; i++) {\n            if (all[i] != option) {\n                continue;\n            }\n            if (direction > 0) {\n                return all[i + 1];\n            }\n            return all[i - 1];\n        }\n        return null;\n    }\n    /**\n     * Returns the dom element of the item\n     * matching the given value.\n     *\n     */\n    getItem(item) {\n        if (typeof item == 'object') {\n            return item;\n        }\n        var value = hash_key(item);\n        return value !== null\n            ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n            : null;\n    }\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     */\n    addItems(values, silent) {\n        var self = this;\n        var items = Array.isArray(values) ? values : [values];\n        items = items.filter(x => self.items.indexOf(x) === -1);\n        const last_item = items[items.length - 1];\n        items.forEach(item => {\n            self.isPending = (item !== last_item);\n            self.addItem(item, silent);\n        });\n    }\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     */\n    addItem(value, silent) {\n        var events = silent ? [] : ['change', 'dropdown_close'];\n        debounce_events(this, events, () => {\n            var item, wasFull;\n            const self = this;\n            const inputMode = self.settings.mode;\n            const hashed = hash_key(value);\n            if (hashed && self.items.indexOf(hashed) !== -1) {\n                if (inputMode === 'single') {\n                    self.close();\n                }\n                if (inputMode === 'single' || !self.settings.duplicates) {\n                    return;\n                }\n            }\n            if (hashed === null || !self.options.hasOwnProperty(hashed))\n                return;\n            if (inputMode === 'single')\n                self.clear(silent);\n            if (inputMode === 'multi' && self.isFull())\n                return;\n            item = self._render('item', self.options[hashed]);\n            if (self.control.contains(item)) { // duplicates\n                item = item.cloneNode(true);\n            }\n            wasFull = self.isFull();\n            self.items.splice(self.caretPos, 0, hashed);\n            self.insertAtCaret(item);\n            if (self.isSetup) {\n                // update menu / remove the option (if this is not one item being added as part of series)\n                if (!self.isPending && self.settings.hideSelected) {\n                    let option = self.getOption(hashed);\n                    let next = self.getAdjacent(option, 1);\n                    if (next) {\n                        self.setActiveOption(next);\n                    }\n                }\n                // refreshOptions after setActiveOption(),\n                // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n                if (!self.isPending && !self.settings.closeAfterSelect) {\n                    self.refreshOptions(self.isFocused && inputMode !== 'single');\n                }\n                // hide the menu if the maximum number of items have been selected or no options are left\n                if (self.settings.closeAfterSelect != false && self.isFull()) {\n                    self.close();\n                }\n                else if (!self.isPending) {\n                    self.positionDropdown();\n                }\n                self.trigger('item_add', hashed, item);\n                if (!self.isPending) {\n                    self.updateOriginalInput({ silent: silent });\n                }\n            }\n            if (!self.isPending || (!wasFull && self.isFull())) {\n                self.inputState();\n                self.refreshState();\n            }\n        });\n    }\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     */\n    removeItem(item = null, silent) {\n        const self = this;\n        item = self.getItem(item);\n        if (!item)\n            return;\n        var i, idx;\n        const value = item.dataset.value;\n        i = nodeIndex(item);\n        item.remove();\n        if (item.classList.contains('active')) {\n            idx = self.activeItems.indexOf(item);\n            self.activeItems.splice(idx, 1);\n            removeClasses(item, 'active');\n        }\n        self.items.splice(i, 1);\n        self.lastQuery = null;\n        if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n            self.removeOption(value, silent);\n        }\n        if (i < self.caretPos) {\n            self.setCaret(self.caretPos - 1);\n        }\n        self.updateOriginalInput({ silent: silent });\n        self.refreshState();\n        self.positionDropdown();\n        self.trigger('item_remove', value, item);\n    }\n    /**\n     * Invokes the `create` method provided in the\n     * TomSelect options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     */\n    createItem(input = null, callback = () => { }) {\n        // triggerDropdown parameter @deprecated 2.1.1\n        if (arguments.length === 3) {\n            callback = arguments[2];\n        }\n        if (typeof callback != 'function') {\n            callback = () => { };\n        }\n        var self = this;\n        var caret = self.caretPos;\n        var output;\n        input = input || self.inputValue();\n        if (!self.canCreate(input)) {\n            callback();\n            return false;\n        }\n        self.lock();\n        var created = false;\n        var create = (data) => {\n            self.unlock();\n            if (!data || typeof data !== 'object')\n                return callback();\n            var value = hash_key(data[self.settings.valueField]);\n            if (typeof value !== 'string') {\n                return callback();\n            }\n            self.setTextboxValue();\n            self.addOption(data, true);\n            self.setCaret(caret);\n            self.addItem(value);\n            callback(data);\n            created = true;\n        };\n        if (typeof self.settings.create === 'function') {\n            output = self.settings.create.call(this, input, create);\n        }\n        else {\n            output = {\n                [self.settings.labelField]: input,\n                [self.settings.valueField]: input,\n            };\n        }\n        if (!created) {\n            create(output);\n        }\n        return true;\n    }\n    /**\n     * Re-renders the selected item lists.\n     */\n    refreshItems() {\n        var self = this;\n        self.lastQuery = null;\n        if (self.isSetup) {\n            self.addItems(self.items);\n        }\n        self.updateOriginalInput();\n        self.refreshState();\n    }\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n    refreshState() {\n        const self = this;\n        self.refreshValidityState();\n        const isFull = self.isFull();\n        const isLocked = self.isLocked;\n        self.wrapper.classList.toggle('rtl', self.rtl);\n        const wrap_classList = self.wrapper.classList;\n        wrap_classList.toggle('focus', self.isFocused);\n        wrap_classList.toggle('disabled', self.isDisabled);\n        wrap_classList.toggle('readonly', self.isReadOnly);\n        wrap_classList.toggle('required', self.isRequired);\n        wrap_classList.toggle('invalid', !self.isValid);\n        wrap_classList.toggle('locked', isLocked);\n        wrap_classList.toggle('full', isFull);\n        wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n        wrap_classList.toggle('dropdown-active', self.isOpen);\n        wrap_classList.toggle('has-options', isEmptyObject(self.options));\n        wrap_classList.toggle('has-items', self.items.length > 0);\n    }\n    /**\n     * Update the `required` attribute of both input and control input.\n     *\n     * The `required` property needs to be activated on the control input\n     * for the error to be displayed at the right place. `required` also\n     * needs to be temporarily deactivated on the input since the input is\n     * hidden and can't show errors.\n     */\n    refreshValidityState() {\n        var self = this;\n        if (!self.input.validity) {\n            return;\n        }\n        self.isValid = self.input.validity.valid;\n        self.isInvalid = !self.isValid;\n    }\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n    isFull() {\n        return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n    }\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     *\n     */\n    updateOriginalInput(opts = {}) {\n        const self = this;\n        var option, label;\n        const empty_option = self.input.querySelector('option[value=\"\"]');\n        if (self.is_select_tag) {\n            const selected = [];\n            const has_selected = self.input.querySelectorAll('option:checked').length;\n            function AddSelected(option_el, value, label) {\n                if (!option_el) {\n                    option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n                }\n                // don't move empty option from top of list\n                // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n                if (option_el != empty_option) {\n                    self.input.append(option_el);\n                }\n                selected.push(option_el);\n                // marking empty option as selected can break validation\n                // fixes https://github.com/orchidjs/tom-select/issues/303\n                if (option_el != empty_option || has_selected > 0) {\n                    option_el.selected = true;\n                }\n                return option_el;\n            }\n            // unselect all selected options\n            self.input.querySelectorAll('option:checked').forEach((option_el) => {\n                option_el.selected = false;\n            });\n            // nothing selected?\n            if (self.items.length == 0 && self.settings.mode == 'single') {\n                AddSelected(empty_option, \"\", \"\");\n                // order selected <option> tags for values in self.items\n            }\n            else {\n                self.items.forEach((value) => {\n                    option = self.options[value];\n                    label = option[self.settings.labelField] || '';\n                    if (selected.includes(option.$option)) {\n                        const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n                        AddSelected(reuse_opt, value, label);\n                    }\n                    else {\n                        option.$option = AddSelected(option.$option, value, label);\n                    }\n                });\n            }\n        }\n        else {\n            self.input.value = self.getValue();\n        }\n        if (self.isSetup) {\n            if (!opts.silent) {\n                self.trigger('change', self.getValue());\n            }\n        }\n    }\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n    open() {\n        var self = this;\n        if (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull()))\n            return;\n        self.isOpen = true;\n        setAttr(self.focus_node, { 'aria-expanded': 'true' });\n        self.refreshState();\n        applyCSS(self.dropdown, { visibility: 'hidden', display: 'block' });\n        self.positionDropdown();\n        applyCSS(self.dropdown, { visibility: 'visible', display: 'block' });\n        self.focus();\n        self.trigger('dropdown_open', self.dropdown);\n    }\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n    close(setTextboxValue = true) {\n        var self = this;\n        var trigger = self.isOpen;\n        if (setTextboxValue) {\n            // before blur() to prevent form onchange event\n            self.setTextboxValue();\n            if (self.settings.mode === 'single' && self.items.length) {\n                self.inputState();\n            }\n        }\n        self.isOpen = false;\n        setAttr(self.focus_node, { 'aria-expanded': 'false' });\n        applyCSS(self.dropdown, { display: 'none' });\n        if (self.settings.hideSelected) {\n            self.clearActiveOption();\n        }\n        self.refreshState();\n        if (trigger)\n            self.trigger('dropdown_close', self.dropdown);\n    }\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown if dropdownParent = 'body'.\n     * Otherwise, position is determined by css\n     */\n    positionDropdown() {\n        if (this.settings.dropdownParent !== 'body') {\n            return;\n        }\n        var context = this.control;\n        var rect = context.getBoundingClientRect();\n        var top = context.offsetHeight + rect.top + window.scrollY;\n        var left = rect.left + window.scrollX;\n        applyCSS(this.dropdown, {\n            width: rect.width + 'px',\n            top: top + 'px',\n            left: left + 'px'\n        });\n    }\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     */\n    clear(silent) {\n        var self = this;\n        if (!self.items.length)\n            return;\n        var items = self.controlChildren();\n        iterate(items, (item) => {\n            self.removeItem(item, true);\n        });\n        self.inputState();\n        if (!silent)\n            self.updateOriginalInput();\n        self.trigger('clear');\n    }\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     */\n    insertAtCaret(el) {\n        const self = this;\n        const caret = self.caretPos;\n        const target = self.control;\n        target.insertBefore(el, target.children[caret] || null);\n        self.setCaret(caret + 1);\n    }\n    /**\n     * Removes the current selected item(s).\n     *\n     */\n    deleteSelection(e) {\n        var direction, selection, caret, tail;\n        var self = this;\n        direction = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n        selection = getSelection(self.control_input);\n        // determine items that will be removed\n        const rm_items = [];\n        if (self.activeItems.length) {\n            tail = getTail(self.activeItems, direction);\n            caret = nodeIndex(tail);\n            if (direction > 0) {\n                caret++;\n            }\n            iterate(self.activeItems, (item) => rm_items.push(item));\n        }\n        else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n            const items = self.controlChildren();\n            let rm_item;\n            if (direction < 0 && selection.start === 0 && selection.length === 0) {\n                rm_item = items[self.caretPos - 1];\n            }\n            else if (direction > 0 && selection.start === self.inputValue().length) {\n                rm_item = items[self.caretPos];\n            }\n            if (rm_item !== undefined) {\n                rm_items.push(rm_item);\n            }\n        }\n        if (!self.shouldDelete(rm_items, e)) {\n            return false;\n        }\n        preventDefault(e, true);\n        // perform removal\n        if (typeof caret !== 'undefined') {\n            self.setCaret(caret);\n        }\n        while (rm_items.length) {\n            self.removeItem(rm_items.pop());\n        }\n        self.inputState();\n        self.positionDropdown();\n        self.refreshOptions(false);\n        return true;\n    }\n    /**\n     * Return true if the items should be deleted\n     */\n    shouldDelete(items, evt) {\n        const values = items.map(item => item.dataset.value);\n        // allow the callback to abort\n        if (!values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Selects the previous / next item (depending on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     */\n    advanceSelection(direction, e) {\n        var last_active, adjacent, self = this;\n        if (self.rtl)\n            direction *= -1;\n        if (self.inputValue().length)\n            return;\n        // add or remove to active items\n        if (isKeyDown(constants.KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n            last_active = self.getLastActive(direction);\n            if (last_active) {\n                if (!last_active.classList.contains('active')) {\n                    adjacent = last_active;\n                }\n                else {\n                    adjacent = self.getAdjacent(last_active, direction, 'item');\n                }\n                // if no active item, get items adjacent to the control input\n            }\n            else if (direction > 0) {\n                adjacent = self.control_input.nextElementSibling;\n            }\n            else {\n                adjacent = self.control_input.previousElementSibling;\n            }\n            if (adjacent) {\n                if (adjacent.classList.contains('active')) {\n                    self.removeActiveItem(last_active);\n                }\n                self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n            }\n            // move caret to the left or right\n        }\n        else {\n            self.moveCaret(direction);\n        }\n    }\n    moveCaret(direction) { }\n    /**\n     * Get the last active item\n     *\n     */\n    getLastActive(direction) {\n        let last_active = this.control.querySelector('.last-active');\n        if (last_active) {\n            return last_active;\n        }\n        var result = this.control.querySelectorAll('.active');\n        if (result) {\n            return getTail(result, direction);\n        }\n    }\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n    setCaret(new_pos) {\n        this.caretPos = this.items.length;\n    }\n    /**\n     * Return list of item dom elements\n     *\n     */\n    controlChildren() {\n        return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n    }\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n    lock() {\n        this.setLocked(true);\n    }\n    /**\n     * Re-enables user input on the control.\n     */\n    unlock() {\n        this.setLocked(false);\n    }\n    /**\n     * Disable or enable user input on the control\n     */\n    setLocked(lock = this.isReadOnly || this.isDisabled) {\n        this.isLocked = lock;\n        this.refreshState();\n    }\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n    disable() {\n        this.setDisabled(true);\n        this.close();\n    }\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n    enable() {\n        this.setDisabled(false);\n    }\n    setDisabled(disabled) {\n        this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n        this.isDisabled = disabled;\n        this.input.disabled = disabled;\n        this.control_input.disabled = disabled;\n        this.setLocked();\n    }\n    setReadOnly(isReadOnly) {\n        this.isReadOnly = isReadOnly;\n        this.input.readOnly = isReadOnly;\n        this.control_input.readOnly = isReadOnly;\n        this.setLocked();\n    }\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n    destroy() {\n        var self = this;\n        var revertSettings = self.revertSettings;\n        self.trigger('destroy');\n        self.off();\n        self.wrapper.remove();\n        self.dropdown.remove();\n        self.input.innerHTML = revertSettings.innerHTML;\n        self.input.tabIndex = revertSettings.tabIndex;\n        removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n        self._destroy();\n        delete self.input.tomselect;\n    }\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     */\n    render(templateName, data) {\n        var id, html;\n        const self = this;\n        if (typeof this.settings.render[templateName] !== 'function') {\n            return null;\n        }\n        // render markup\n        html = self.settings.render[templateName].call(this, data, escape_html);\n        if (!html) {\n            return null;\n        }\n        html = getDom(html);\n        // add mandatory attributes\n        if (templateName === 'option' || templateName === 'option_create') {\n            if (data[self.settings.disabledField]) {\n                setAttr(html, { 'aria-disabled': 'true' });\n            }\n            else {\n                setAttr(html, { 'data-selectable': '' });\n            }\n        }\n        else if (templateName === 'optgroup') {\n            id = data.group[self.settings.optgroupValueField];\n            setAttr(html, { 'data-group': id });\n            if (data.group[self.settings.disabledField]) {\n                setAttr(html, { 'data-disabled': '' });\n            }\n        }\n        if (templateName === 'option' || templateName === 'item') {\n            const value = get_hash(data[self.settings.valueField]);\n            setAttr(html, { 'data-value': value });\n            // make sure we have some classes if a template is overwritten\n            if (templateName === 'item') {\n                addClasses(html, self.settings.itemClass);\n                setAttr(html, { 'data-ts-item': '' });\n            }\n            else {\n                addClasses(html, self.settings.optionClass);\n                setAttr(html, {\n                    role: 'option',\n                    id: data.$id\n                });\n                // update cache\n                data.$div = html;\n                self.options[value] = data;\n            }\n        }\n        return html;\n    }\n    /**\n     * Type guarded rendering\n     *\n     */\n    _render(templateName, data) {\n        const html = this.render(templateName, data);\n        if (html == null) {\n            throw 'HTMLElement expected';\n        }\n        return html;\n    }\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     */\n    clearCache() {\n        iterate(this.options, (option) => {\n            if (option.$div) {\n                option.$div.remove();\n                delete option.$div;\n            }\n        });\n    }\n    /**\n     * Removes a value from item and option caches\n     *\n     */\n    uncacheValue(value) {\n        const option_el = this.getOption(value);\n        if (option_el)\n            option_el.remove();\n    }\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     */\n    canCreate(input) {\n        return this.settings.create && (input.length > 0) && this.settings.createFilter.call(this, input);\n    }\n    /**\n     * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n     *\n     * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n     *\n     * });\n     */\n    hook(when, method, new_fn) {\n        var self = this;\n        var orig_method = self[method];\n        self[method] = function () {\n            var result, result_new;\n            if (when === 'after') {\n                result = orig_method.apply(self, arguments);\n            }\n            result_new = new_fn.apply(self, arguments);\n            if (when === 'instead') {\n                return result_new;\n            }\n            if (when === 'before') {\n                result = orig_method.apply(self, arguments);\n            }\n            return result;\n        };\n    }\n}\n;\n//# sourceMappingURL=tom-select.js.map","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nexport default function MicroPlugin(Interface) {\n    Interface.plugins = {};\n    return class extends Interface {\n        constructor() {\n            super(...arguments);\n            this.plugins = {\n                names: [],\n                settings: {},\n                requested: {},\n                loaded: {}\n            };\n        }\n        /**\n         * Registers a plugin.\n         *\n         * @param {function} fn\n         */\n        static define(name, fn) {\n            Interface.plugins[name] = {\n                'name': name,\n                'fn': fn\n            };\n        }\n        /**\n         * Initializes the listed plugins (with options).\n         * Acceptable formats:\n         *\n         * List (without options):\n         *   ['a', 'b', 'c']\n         *\n         * List (with options):\n         *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n         *\n         * Hash (with options):\n         *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n         *\n         * @param {array|object} plugins\n         */\n        initializePlugins(plugins) {\n            var key, name;\n            const self = this;\n            const queue = [];\n            if (Array.isArray(plugins)) {\n                plugins.forEach((plugin) => {\n                    if (typeof plugin === 'string') {\n                        queue.push(plugin);\n                    }\n                    else {\n                        self.plugins.settings[plugin.name] = plugin.options;\n                        queue.push(plugin.name);\n                    }\n                });\n            }\n            else if (plugins) {\n                for (key in plugins) {\n                    if (plugins.hasOwnProperty(key)) {\n                        self.plugins.settings[key] = plugins[key];\n                        queue.push(key);\n                    }\n                }\n            }\n            while (name = queue.shift()) {\n                self.require(name);\n            }\n        }\n        loadPlugin(name) {\n            var self = this;\n            var plugins = self.plugins;\n            var plugin = Interface.plugins[name];\n            if (!Interface.plugins.hasOwnProperty(name)) {\n                throw new Error('Unable to find \"' + name + '\" plugin');\n            }\n            plugins.requested[name] = true;\n            plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n            plugins.names.push(name);\n        }\n        /**\n         * Initializes a plugin.\n         *\n         */\n        require(name) {\n            var self = this;\n            var plugins = self.plugins;\n            if (!self.plugins.loaded.hasOwnProperty(name)) {\n                if (plugins.requested[name]) {\n                    throw new Error('Plugin has circular dependency (\"' + name + '\")');\n                }\n                self.loadPlugin(name);\n            }\n            return plugins.loaded[name];\n        }\n    };\n}\n//# sourceMappingURL=microplugin.js.map","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nconst hash_key = value => {\n  if (typeof value === 'undefined' || value === null) return null;\n  return get_hash(value);\n};\nconst get_hash = value => {\n  if (typeof value === 'boolean') return value ? '1' : '0';\n  return value + '';\n};\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin (userOptions) {\n  var self = this;\n  var orig_onOptionSelect = self.onOptionSelect;\n  self.settings.hideSelected = false;\n  const cbOptions = Object.assign({\n    // so that the user may add different ones as well\n    className: \"tomselect-checkbox\",\n    // the following default to the historic plugin's values\n    checkedClassNames: undefined,\n    uncheckedClassNames: undefined\n  }, userOptions);\n  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n    if (toCheck) {\n      checkbox.checked = true;\n      if (cbOptions.uncheckedClassNames) {\n        checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n      }\n      if (cbOptions.checkedClassNames) {\n        checkbox.classList.add(...cbOptions.checkedClassNames);\n      }\n    } else {\n      checkbox.checked = false;\n      if (cbOptions.checkedClassNames) {\n        checkbox.classList.remove(...cbOptions.checkedClassNames);\n      }\n      if (cbOptions.uncheckedClassNames) {\n        checkbox.classList.add(...cbOptions.uncheckedClassNames);\n      }\n    }\n  };\n\n  // update the checkbox for an option\n  var UpdateCheckbox = function UpdateCheckbox(option) {\n    setTimeout(() => {\n      var checkbox = option.querySelector('input.' + cbOptions.className);\n      if (checkbox instanceof HTMLInputElement) {\n        UpdateChecked(checkbox, option.classList.contains('selected'));\n      }\n    }, 1);\n  };\n\n  // add checkbox to option template\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_option = self.settings.render.option;\n    self.settings.render.option = (data, escape_html) => {\n      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n      var checkbox = document.createElement('input');\n      if (cbOptions.className) {\n        checkbox.classList.add(cbOptions.className);\n      }\n      checkbox.addEventListener('click', function (evt) {\n        preventDefault(evt);\n      });\n      checkbox.type = 'checkbox';\n      const hashed = hash_key(data[self.settings.valueField]);\n      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n      rendered.prepend(checkbox);\n      return rendered;\n    };\n  });\n\n  // uncheck when item removed\n  self.on('item_remove', value => {\n    var option = self.getOption(value);\n    if (option) {\n      // if dropdown hasn't been opened yet, the option won't exist\n      option.classList.remove('selected'); // selected class won't be removed yet\n      UpdateCheckbox(option);\n    }\n  });\n\n  // check when item added\n  self.on('item_add', value => {\n    var option = self.getOption(value);\n    if (option) {\n      // if dropdown hasn't been opened yet, the option won't exist\n      UpdateCheckbox(option);\n    }\n  });\n\n  // remove items when selected option is clicked\n  self.hook('instead', 'onOptionSelect', (evt, option) => {\n    if (option.classList.contains('selected')) {\n      option.classList.remove('selected');\n      self.removeItem(option.dataset.value);\n      self.refreshOptions();\n      preventDefault(evt, true);\n      return;\n    }\n    orig_onOptionSelect.call(self, evt, option);\n    UpdateCheckbox(option);\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    className: 'clear-button',\n    title: 'Clear All',\n    html: data => {\n      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n    }\n  }, userOptions);\n  self.on('initialize', () => {\n    var button = getDom(options.html(options));\n    button.addEventListener('click', evt => {\n      if (self.isLocked) return;\n      self.clear();\n      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n        self.addItem('');\n      }\n      evt.preventDefault();\n      evt.stopPropagation();\n    });\n    self.control.appendChild(button);\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Set attributes of an element\n *\n */\nconst setAttr = (el, attrs) => {\n  iterate(attrs, (val, attr) => {\n    if (val == null) {\n      el.removeAttribute(attr);\n    } else {\n      el.setAttribute(attr, '' + val);\n    }\n  });\n};\n\n/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nconst insertAfter = (referenceNode, newNode) => {\n  var _referenceNode$parent;\n  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n};\nconst insertBefore = (referenceNode, newNode) => {\n  var _referenceNode$parent2;\n  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n};\nconst isBefore = (referenceNode, newNode) => {\n  do {\n    var _newNode;\n    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n    if (referenceNode == newNode) {\n      return true;\n    }\n  } while (newNode && newNode.previousElementSibling);\n  return false;\n};\nfunction plugin () {\n  var self = this;\n  if (self.settings.mode !== 'multi') return;\n  var orig_lock = self.lock;\n  var orig_unlock = self.unlock;\n  let sortable = true;\n  let drag_item;\n\n  /**\n   * Add draggable attribute to item\n   */\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_item = self.settings.render.item;\n    self.settings.render.item = (data, escape) => {\n      const item = getDom(orig_render_item.call(self, data, escape));\n      setAttr(item, {\n        'draggable': 'true'\n      });\n\n      // prevent doc_mousedown (see tom-select.ts)\n      const mousedown = evt => {\n        if (!sortable) preventDefault(evt);\n        evt.stopPropagation();\n      };\n      const dragStart = evt => {\n        drag_item = item;\n        setTimeout(() => {\n          item.classList.add('ts-dragging');\n        }, 0);\n      };\n      const dragOver = evt => {\n        evt.preventDefault();\n        item.classList.add('ts-drag-over');\n        moveitem(item, drag_item);\n      };\n      const dragLeave = () => {\n        item.classList.remove('ts-drag-over');\n      };\n      const moveitem = (targetitem, dragitem) => {\n        if (dragitem === undefined) return;\n        if (isBefore(dragitem, item)) {\n          insertAfter(targetitem, dragitem);\n        } else {\n          insertBefore(targetitem, dragitem);\n        }\n      };\n      const dragend = () => {\n        var _drag_item;\n        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n        drag_item = undefined;\n        var values = [];\n        self.control.querySelectorAll(`[data-value]`).forEach(el => {\n          if (el.dataset.value) {\n            let value = el.dataset.value;\n            if (value) {\n              values.push(value);\n            }\n          }\n        });\n        self.setValue(values);\n      };\n      addEvent(item, 'mousedown', mousedown);\n      addEvent(item, 'dragstart', dragStart);\n      addEvent(item, 'dragenter', dragOver);\n      addEvent(item, 'dragover', dragOver);\n      addEvent(item, 'dragleave', dragLeave);\n      addEvent(item, 'dragend', dragend);\n      return item;\n    };\n  });\n  self.hook('instead', 'lock', () => {\n    sortable = false;\n    return orig_lock.call(self);\n  });\n  self.hook('instead', 'unlock', () => {\n    sortable = true;\n    return orig_unlock.call(self);\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    title: 'Untitled',\n    headerClass: 'dropdown-header',\n    titleRowClass: 'dropdown-header-title',\n    labelClass: 'dropdown-header-label',\n    closeClass: 'dropdown-header-close',\n    html: data => {\n      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n    }\n  }, userOptions);\n  self.on('initialize', () => {\n    var header = getDom(options.html(options));\n    var close_link = header.querySelector('.' + options.closeClass);\n    if (close_link) {\n      close_link.addEventListener('click', evt => {\n        preventDefault(evt, true);\n        self.close();\n      });\n    }\n    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Remove css classes\n *\n */\nconst removeClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.remove(cls);\n    });\n  });\n};\n\n/**\n * Return arguments\n *\n */\nconst classesArray = args => {\n  var classes = [];\n  iterate(args, _classes => {\n    if (typeof _classes === 'string') {\n      _classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n    }\n    if (Array.isArray(_classes)) {\n      classes = classes.concat(_classes);\n    }\n  });\n  return classes.filter(Boolean);\n};\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nconst castAsArray = arg => {\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  return arg;\n};\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nconst nodeIndex = (el, amongst) => {\n  if (!el) return -1;\n  amongst = amongst || el.nodeName;\n  var i = 0;\n  while (el = el.previousElementSibling) {\n    if (el.matches(amongst)) {\n      i++;\n    }\n  }\n  return i;\n};\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  var self = this;\n\n  /**\n   * Moves the caret to the specified index.\n   *\n   * The input must be moved by leaving it in place and moving the\n   * siblings, due to the fact that focus cannot be restored once lost\n   * on mobile webkit devices\n   *\n   */\n  self.hook('instead', 'setCaret', new_pos => {\n    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n      new_pos = self.items.length;\n    } else {\n      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n      if (new_pos != self.caretPos && !self.isPending) {\n        self.controlChildren().forEach((child, j) => {\n          if (j < new_pos) {\n            self.control_input.insertAdjacentElement('beforebegin', child);\n          } else {\n            self.control.appendChild(child);\n          }\n        });\n      }\n    }\n    self.caretPos = new_pos;\n  });\n  self.hook('instead', 'moveCaret', direction => {\n    if (!self.isFocused) return;\n\n    // move caret before or after selected items\n    const last_active = self.getLastActive(direction);\n    if (last_active) {\n      const idx = nodeIndex(last_active);\n      self.setCaret(direction > 0 ? idx + 1 : idx);\n      self.setActiveItem();\n      removeClasses(last_active, 'last-active');\n\n      // move caret left or right of current position\n    } else {\n      self.setCaret(self.caretPos + direction);\n    }\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\nconst KEY_ESC = 27;\nconst KEY_TAB = 9;\n // ctrl key or apple key for ma\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Add css classes\n *\n */\nconst addClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.add(cls);\n    });\n  });\n};\n\n/**\n * Return arguments\n *\n */\nconst classesArray = args => {\n  var classes = [];\n  iterate(args, _classes => {\n    if (typeof _classes === 'string') {\n      _classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n    }\n    if (Array.isArray(_classes)) {\n      classes = classes.concat(_classes);\n    }\n  });\n  return classes.filter(Boolean);\n};\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nconst castAsArray = arg => {\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  return arg;\n};\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  const self = this;\n  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n  self.hook('before', 'setup', () => {\n    self.focus_node = self.control;\n    addClasses(self.control_input, 'dropdown-input');\n    const div = getDom('<div class=\"dropdown-input-wrap\">');\n    div.append(self.control_input);\n    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n    // set a placeholder in the select control\n    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n    placeholder.placeholder = self.settings.placeholder || '';\n    self.control.append(placeholder);\n  });\n  self.on('initialize', () => {\n    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n    self.control_input.addEventListener('keydown', evt => {\n      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n      switch (evt.keyCode) {\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(evt, true);\n            self.close();\n          }\n          self.clearActiveItems();\n          return;\n        case KEY_TAB:\n          self.focus_node.tabIndex = -1;\n          break;\n      }\n      return self.onKeyDown.call(self, evt);\n    });\n    self.on('blur', () => {\n      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n    });\n\n    // give the control_input focus when the dropdown is open\n    self.on('dropdown_open', () => {\n      self.control_input.focus();\n    });\n\n    // prevent onBlur from closing when focus is on the control_input\n    const orig_onBlur = self.onBlur;\n    self.hook('instead', 'onBlur', evt => {\n      if (evt && evt.relatedTarget == self.control_input) return;\n      return orig_onBlur.call(self);\n    });\n    addEvent(self.control_input, 'blur', () => self.onBlur());\n\n    // return focus to control to allow further keyboard input\n    self.hook('before', 'close', () => {\n      if (!self.isOpen) return;\n      self.focus_node.focus({\n        preventScroll: true\n      });\n    });\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  var self = this;\n  self.on('initialize', () => {\n    var test_input = document.createElement('span');\n    var control = self.control_input;\n    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n    self.wrapper.appendChild(test_input);\n    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n    for (const style_name of transfer_styles) {\n      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n      test_input.style[style_name] = control.style[style_name];\n    }\n\n    /**\n     * Set the control width\n     *\n     */\n    var resize = () => {\n      test_input.textContent = control.value;\n      control.style.width = test_input.clientWidth + 'px';\n    };\n    resize();\n    self.on('update item_add item_remove', resize);\n    addEvent(control, 'input', resize);\n    addEvent(control, 'keyup', resize);\n    addEvent(control, 'blur', resize);\n    addEvent(control, 'update', resize);\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nconst escape_html = str => {\n  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n};\n\n/**\n * Prevent default\n *\n */\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n    return tpl.content.firstChild;\n  }\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin (userOptions) {\n  const options = Object.assign({\n    label: '&times;',\n    title: 'Remove',\n    className: 'remove',\n    append: true\n  }, userOptions);\n\n  //options.className = 'remove-single';\n  var self = this;\n\n  // override the render method to add remove button to each item\n  if (!options.append) {\n    return;\n  }\n  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_item = self.settings.render.item;\n    self.settings.render.item = (data, escape) => {\n      var item = getDom(orig_render_item.call(self, data, escape));\n      var close_button = getDom(html);\n      item.appendChild(close_button);\n      addEvent(close_button, 'mousedown', evt => {\n        preventDefault(evt, true);\n      });\n      addEvent(close_button, 'click', evt => {\n        if (self.isLocked) return;\n\n        // propagating will trigger the dropdown to show for single mode\n        preventDefault(evt, true);\n        if (self.isLocked) return;\n        if (!self.shouldDelete([item], evt)) return;\n        self.removeItem(item);\n        self.refreshOptions(false);\n        self.inputState();\n      });\n      return item;\n    };\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Add css classes\n *\n */\nconst addClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.add(cls);\n    });\n  });\n};\n\n/**\n * Return arguments\n *\n */\nconst classesArray = args => {\n  var classes = [];\n  iterate(args, _classes => {\n    if (typeof _classes === 'string') {\n      _classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n    }\n    if (Array.isArray(_classes)) {\n      classes = classes.concat(_classes);\n    }\n  });\n  return classes.filter(Boolean);\n};\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nconst castAsArray = arg => {\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  return arg;\n};\n\n/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  const self = this;\n  const orig_canLoad = self.canLoad;\n  const orig_clearActiveOption = self.clearActiveOption;\n  const orig_loadCallback = self.loadCallback;\n  var pagination = {};\n  var dropdown_content;\n  var loading_more = false;\n  var load_more_opt;\n  var default_values = [];\n  if (!self.settings.shouldLoadMore) {\n    // return true if additional results should be loaded\n    self.settings.shouldLoadMore = () => {\n      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n      if (scroll_percent > 0.9) {\n        return true;\n      }\n      if (self.activeOption) {\n        var selectable = self.selectable();\n        var index = Array.from(selectable).indexOf(self.activeOption);\n        if (index >= selectable.length - 2) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  if (!self.settings.firstUrl) {\n    throw 'virtual_scroll plugin requires a firstUrl() method';\n  }\n\n  // in order for virtual scrolling to work,\n  // options need to be ordered the same way they're returned from the remote data source\n  self.settings.sortField = [{\n    field: '$order'\n  }, {\n    field: '$score'\n  }];\n\n  // can we load more results for given query?\n  const canLoadMore = query => {\n    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n      return false;\n    }\n    if (query in pagination && pagination[query]) {\n      return true;\n    }\n    return false;\n  };\n  const clearFilter = (option, value) => {\n    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n      return true;\n    }\n    return false;\n  };\n\n  // set the next url that will be\n  self.setNextUrl = (value, next_url) => {\n    pagination[value] = next_url;\n  };\n\n  // getUrl() to be used in settings.load()\n  self.getUrl = query => {\n    if (query in pagination) {\n      const next_url = pagination[query];\n      pagination[query] = false;\n      return next_url;\n    }\n\n    // if the user goes back to a previous query\n    // we need to load the first page again\n    self.clearPagination();\n    return self.settings.firstUrl.call(self, query);\n  };\n\n  // clear pagination\n  self.clearPagination = () => {\n    pagination = {};\n  };\n\n  // don't clear the active option (and cause unwanted dropdown scroll)\n  // while loading more results\n  self.hook('instead', 'clearActiveOption', () => {\n    if (loading_more) {\n      return;\n    }\n    return orig_clearActiveOption.call(self);\n  });\n\n  // override the canLoad method\n  self.hook('instead', 'canLoad', query => {\n    // first time the query has been seen\n    if (!(query in pagination)) {\n      return orig_canLoad.call(self, query);\n    }\n    return canLoadMore(query);\n  });\n\n  // wrap the load\n  self.hook('instead', 'loadCallback', (options, optgroups) => {\n    if (!loading_more) {\n      self.clearOptions(clearFilter);\n    } else if (load_more_opt) {\n      const first_option = options[0];\n      if (first_option !== undefined) {\n        load_more_opt.dataset.value = first_option[self.settings.valueField];\n      }\n    }\n    orig_loadCallback.call(self, options, optgroups);\n    loading_more = false;\n  });\n\n  // add templates to dropdown\n  //\tloading_more if we have another url in the queue\n  //\tno_more_results if we don't have another url in the queue\n  self.hook('after', 'refreshOptions', () => {\n    const query = self.lastValue;\n    var option;\n    if (canLoadMore(query)) {\n      option = self.render('loading_more', {\n        query: query\n      });\n      if (option) {\n        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n        load_more_opt = option;\n      }\n    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n      option = self.render('no_more_results', {\n        query: query\n      });\n    }\n    if (option) {\n      addClasses(option, self.settings.optionClass);\n      dropdown_content.append(option);\n    }\n  });\n\n  // add scroll listener and default templates\n  self.on('initialize', () => {\n    default_values = Object.keys(self.options);\n    dropdown_content = self.dropdown_content;\n\n    // default templates\n    self.settings.render = Object.assign({}, {\n      loading_more: () => {\n        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n      },\n      no_more_results: () => {\n        return `<div class=\"no-more-results\">No more results</div>`;\n      }\n    }, self.settings.render);\n\n    // watch dropdown content scroll position\n    dropdown_content.addEventListener('scroll', () => {\n      if (!self.settings.shouldLoadMore.call(self)) {\n        return;\n      }\n\n      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n      if (!canLoadMore(self.lastValue)) {\n        return;\n      }\n\n      // don't call load() too much\n      if (loading_more) return;\n      loading_more = true;\n      self.load.call(self, self.lastValue);\n    });\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","import TomSelect from \"./tom-select.js\";\nimport change_listener from \"./plugins/change_listener/plugin.js\";\nimport checkbox_options from \"./plugins/checkbox_options/plugin.js\";\nimport clear_button from \"./plugins/clear_button/plugin.js\";\nimport drag_drop from \"./plugins/drag_drop/plugin.js\";\nimport dropdown_header from \"./plugins/dropdown_header/plugin.js\";\nimport caret_position from \"./plugins/caret_position/plugin.js\";\nimport dropdown_input from \"./plugins/dropdown_input/plugin.js\";\nimport input_autogrow from \"./plugins/input_autogrow/plugin.js\";\nimport no_backspace_delete from \"./plugins/no_backspace_delete/plugin.js\";\nimport no_active_items from \"./plugins/no_active_items/plugin.js\";\nimport optgroup_columns from \"./plugins/optgroup_columns/plugin.js\";\nimport remove_button from \"./plugins/remove_button/plugin.js\";\nimport restore_on_backspace from \"./plugins/restore_on_backspace/plugin.js\";\nimport virtual_scroll from \"./plugins/virtual_scroll/plugin.js\";\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\nexport default TomSelect;\n//# sourceMappingURL=tom-select.complete.js.map","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\n\n/**\n * Add event helper\n *\n */\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n\n/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  addEvent(this.input, 'change', () => {\n    this.sync();\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  var self = this;\n  var orig_deleteSelection = self.deleteSelection;\n  this.hook('instead', 'deleteSelection', evt => {\n    if (self.activeItems.length) {\n      return orig_deleteSelection.call(self, evt);\n    }\n    return false;\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  this.hook('instead', 'setActiveItem', () => {});\n  this.hook('instead', 'selectAll', () => {});\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\nconst KEY_LEFT = 37;\nconst KEY_RIGHT = 39;\n // ctrl key or apple key for ma\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nconst parentMatch = (target, selector, wrapper) => {\n  while (target && target.matches) {\n    if (target.matches(selector)) {\n      return target;\n    }\n    target = target.parentNode;\n  }\n};\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nconst nodeIndex = (el, amongst) => {\n  if (!el) return -1;\n  amongst = amongst || el.nodeName;\n  var i = 0;\n  while (el = el.previousElementSibling) {\n    if (el.matches(amongst)) {\n      i++;\n    }\n  }\n  return i;\n};\n\n/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin () {\n  var self = this;\n  var orig_keydown = self.onKeyDown;\n  self.hook('instead', 'onKeyDown', evt => {\n    var index, option, options, optgroup;\n    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n      return orig_keydown.call(self, evt);\n    }\n    self.ignoreHover = true;\n    optgroup = parentMatch(self.activeOption, '[data-group]');\n    index = nodeIndex(self.activeOption, '[data-selectable]');\n    if (!optgroup) {\n      return;\n    }\n    if (evt.keyCode === KEY_LEFT) {\n      optgroup = optgroup.previousSibling;\n    } else {\n      optgroup = optgroup.nextSibling;\n    }\n    if (!optgroup) {\n      return;\n    }\n    options = optgroup.querySelectorAll('[data-selectable]');\n    option = options[Math.min(options.length - 1, index)];\n    if (option) {\n      self.setActiveOption(option);\n    }\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n","/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nfunction plugin (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    text: option => {\n      return option[self.settings.labelField];\n    }\n  }, userOptions);\n  self.on('item_remove', function (value) {\n    if (!self.isFocused) {\n      return;\n    }\n    if (self.control_input.value.trim() === '') {\n      var option = self.options[value];\n      if (option) {\n        self.setTextboxValue(options.text.call(self, option));\n      }\n    }\n  });\n}\n\nexport { plugin as default };\n//# sourceMappingURL=plugin.js.map\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","Array","from","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","code_point","generator","generateMap","multi_char","set","sort","a","b","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","_code_points","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_fld","optsUser","assign","trim","total","fn_score","item","_","fn_sort","limit","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","el","existing_id","getAttribute","setAttribute","addSlashes","append","parent","node","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","removeClasses","remove","_classes","concat","parentMatch","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","getSettings","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","init_select","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","super","requested","loaded","define","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","order","isOpen","isDisabled","isReadOnly","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","refreshTimeout","tomselect","window","getComputedStyle","getPropertyValue","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupCallbacks","setupTemplates","control","dropdown","_render","dropdown_content","inputMode","control_input","focus_node","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","_destroy","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","nesting","calculateScore","currentResults","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$id","toString","elements","group_order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","title","button","orig_lock","orig_unlock","drag_item","sortable","orig_render_item","dragOver","moveitem","targetitem","dragitem","referenceNode","newNode","_referenceNode$parent","_newNode","isBefore","nextSibling","_referenceNode$parent2","_drag_item","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results"],"sourceRoot":""}